<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zfsoft.cases.dbaccess.dao.QlCaseMaterialMapper">

    <resultMap type="com.zfsoft.cases.dbaccess.data.DbQlCaseMaterial" id="QlCaseMaterialMap">
        <result property="id" column="ID" jdbcType="INTEGER"/>
        <result property="caseMaterialOid" column="CASE_MATERIAL_OID" jdbcType="VARCHAR"/>
        <result property="materialOid" column="MATERIAL_OID" jdbcType="VARCHAR"/>
        <result property="materialName" column="MATERIAL_NAME" jdbcType="VARCHAR"/>
        <result column="MATERIAL_CATALOG_OID" property="materialCatalogOid" jdbcType="VARCHAR" />
        <result column="BAIDU_TEMPLATE_IDS" property="baiduTemplateIds" jdbcType="VARCHAR" />
        <result column="MATERIAL_SAMPLE_ADDR" jdbcType="VARCHAR" property="materialSampleAddr" />
        <result column="MATERIAL_SAMPLE_ADDR_YL" jdbcType="VARCHAR" property="materialSampleAddrYl" />
        <result column="AUDIT_TYPE" jdbcType="VARCHAR" property="auditType" />
        <result column="RESULT_STATUS" jdbcType="VARCHAR" property="resultStatus" />
        <result column="CONFIRM_STATUS" jdbcType="VARCHAR" property="confirmStatus" />
        <result property="caseOid" column="CASE_OID" jdbcType="VARCHAR"/>
        <result property="collectionFlag" column="COLLECTION_FLAG" jdbcType="INTEGER"/>
        <result property="collectionType" column="COLLECTION_TYPE" jdbcType="VARCHAR"/>
        <result property="collectionNumber" column="COLLECTION_NUMBER" jdbcType="INTEGER"/>
        <result property="collectionDate" column="COLLECTION_DATE" jdbcType="TIMESTAMP"/>
        <result property="elemLicenseOid" column="ELEM_LICENSE_OID" jdbcType="VARCHAR"/>
        <result property="elemNumber" column="ELEM_NUMBER" jdbcType="VARCHAR"/>
        <result property="elecLicenName" column="ELEM_LICENSE_NAME" jdbcType="VARCHAR"/>
        <result property="elecLicenNumber" column="ELEM_LICENSE_NUMBER" jdbcType="VARCHAR"/>
        <result property="delFlag" column="DEL_FLAG" jdbcType="INTEGER"/>
        <result property="createDate" column="CREATE_DATE" jdbcType="TIMESTAMP"/>
        <result property="createUserOid" column="CREATE_USER_OID" jdbcType="VARCHAR"/>
        <result property="modifyDate" column="MODIFY_DATE" jdbcType="TIMESTAMP"  />
        <result column="MUST_FLAG" property="mustFlag" jdbcType="DECIMAL" />
        <result column="ELECTRONIC_RESULT" property="electronicResult" jdbcType="VARCHAR" />
        <result column="ELEC_BILL_OID" jdbcType="VARCHAR" property="elecBillOid" />
        <result column="MATERIAL_TYPE" jdbcType="VARCHAR" property="materialType" />
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="QlCaseMaterialMap">
        select
          ID, CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL,AUDIT_TYPE, RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS,CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER,ELEM_LICENSE_NAME,ELEM_LICENSE_NUMBER, DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG,ELECTRONIC_RESULT,ELEC_BILL_OID
        from t_ql_case_material
        where ID = #{id} and DEL_FLAG=0
    </select>

    <!--办件业务编码获取办件材料-->
    <select id="queryQlCaseLinkResultListByCaseOid" parameterType="String" resultMap="QlCaseMaterialMap">
        select
          ID, CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL, AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS,CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE, ELEM_LICENSE_OID, ELEM_NUMBER,ELEM_LICENSE_NAME, ELEM_LICENSE_NUMBER,DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG,ELECTRONIC_RESULT,ELEC_BILL_OID
            from t_ql_case_material
            where CASE_OID = #{caseOid} and DEL_FLAG=0
    </select>

    <!--根据材料业务主键和办件业务主键获取办件材料-->
    <select id="queryMaterialListByMaterialOid" parameterType="String" resultMap="QlCaseMaterialMap">
        select
          ID, CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL,AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS, CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER,ELEM_LICENSE_NAME,ELEM_LICENSE_NUMBER, DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG,ELECTRONIC_RESULT,ELEC_BILL_OID
        from t_ql_case_material
        where MATERIAL_OID = #{materialOid} and CASE_OID = #{caseOid}  and DEL_FLAG=0
    </select>

    <!--办件业务编码获取容缺后补的办件材料-->
    <select id="queryRqhbMaterialByCaseOid" parameterType="String" resultMap="QlCaseMaterialMap">
        select
          ID, CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL,AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS, CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER,ELEM_LICENSE_NAME,ELEM_LICENSE_NUMBER, DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG,ELECTRONIC_RESULT,ELEC_BILL_OID
        from t_ql_case_material
        where CASE_OID = #{caseOid} and DEL_FLAG=0 and collection_type=4
    </select>

    <!--根据办件业务主键和事项材料业务主键查询已保存的办件材料-->
    <select id="queryQlCaseMaterialByOid" parameterType="String" resultMap="QlCaseMaterialMap">
        select
          ID, CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL, AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS,CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER,ELEM_LICENSE_NAME,ELEM_LICENSE_NUMBER, DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG,ELECTRONIC_RESULT,ELEC_BILL_OID
        from t_ql_case_material
        where CASE_OID = #{caseOid} and MATERIAL_OID = #{materialOid} and DEL_FLAG=0
    </select>

    <!--办件材料主键办件材料-->
    <select id="queryMaterialByCaseMaterialOid" parameterType="String" resultMap="QlCaseMaterialMap">
        select
          ID, CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL, AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS,CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER,ELEM_LICENSE_NAME,ELEM_LICENSE_NUMBER, DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG,ELECTRONIC_RESULT,ELEC_BILL_OID
        from t_ql_case_material
        where CASE_MATERIAL_OID = #{caseMaterialOid} and DEL_FLAG=0
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="QlCaseMaterialMap">
        select
          ID, CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL,AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS, CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER,ELEM_LICENSE_NAME,ELEM_LICENSE_NUMBER, DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG,ELECTRONIC_RESULT,ELEC_BILL_OID
        from t_ql_case_material
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="QlCaseMaterialMap">
        select
        ID, CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL,AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS, CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER,
        COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER, ELEM_LICENSE_NAME,ELEM_LICENSE_NUMBER,DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG,ELECTRONIC_RESULT,ELEC_BILL_OID
        from t_ql_case_material
        <where>
            <if test="id != null">
                and ID = #{id}
            </if>
            <if test="caseMaterialOid != null and caseMaterialOid != ''">
                and CASE_MATERIAL_OID = #{caseMaterialOid}
            </if>
            <if test="materialOid != null and materialOid != ''">
                and MATERIAL_OID = #{materialOid}
            </if>
            <if test="materialName != null and materialName != ''">
                and MATERIAL_NAME = #{materialName}
            </if>
            <if test="materialCatalogOid != null and materialCatalogOid != ''" >
                and MATERIAL_CATALOG_OID = #{materialCatalogOid},
            </if>
            <if test="baiduTemplateIds != null and baiduTemplateIds != ''" >
                and BAIDU_TEMPLATE_IDS = #{baiduTemplateIds},
            </if>
            <if test="materialSampleAddr != null and materialSampleAddr != ''" >
                and MATERIAL_SAMPLE_ADDR = #{materialSampleAddr},
            </if>
            <if test="materialSampleAddrYl != null and materialSampleAddrYl != ''" >
                and MATERIAL_SAMPLE_ADDR_YL = #{materialSampleAddrYl},
            </if>
            <if test="auditType != null and auditType != ''" >
                and AUDIT_TYPE = #{auditType},
            </if>
            <if test="resultStatus != null and resultStatus != ''" >
                and RESULT_STATUS = #{resultStatus},
            </if>
            <if test="materialType != null and materialType != ''" >
                and MATERIAL_TYPE = #{materialType},
            </if>
            <if test="confirmStatus != null and confirmStatus != ''" >
                and CONFIRM_STATUS = #{confirmStatus},
            </if>
            <if test="caseOid != null and caseOid != ''">
                and CASE_OID = #{caseOid}
            </if>
            <if test="collectionFlag != null">
                and COLLECTION_FLAG = #{collectionFlag}
            </if>
            <if test="collectionType != null and collectionType != ''">
                and COLLECTION_TYPE = #{collectionType}
            </if>
            <if test="collectionNumber != null">
                and COLLECTION_NUMBER = #{collectionNumber}
            </if>
            <if test="collectionDate != null">
                and COLLECTION_DATE = #{collectionDate}
            </if>
            <if test="delFlag != null">
                and DEL_FLAG = #{delFlag}
            </if>
            <if test="createDate != null">
                and CREATE_DATE = #{createDate}
            </if>
            <if test="mustFlag != null" >
                MUST_FLAG,
            </if>
            <if test="electronicResult != null" >
                ELECTRONIC_RESULT,
            </if>
            <if test="elecBillOid != null">
                ELEC_BILL_OID ,
            </if>
            <if test="createUserOid != null and createUserOid != ''">
                and CREATE_USER_OID = #{createUserOid}
            </if>
                and DEL_FLAG=0
        </where>
    </select>
    <!--办件业务编码获取承诺告知的办件材料-->
    <select id="queryCngzMaterialByCaseOid" parameterType="String" resultMap="QlCaseMaterialMap">
        select
            ID, CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL,AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS, CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER,ELEM_LICENSE_NAME,ELEM_LICENSE_NUMBER, DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG,ELECTRONIC_RESULT,ELEC_BILL_OID
        from t_ql_case_material
        where CASE_OID = #{caseOid} and DEL_FLAG=0 and collection_type=7
    </select>

    <select id="queryMaterialByCaseOidNotAttaFile" parameterType="String" resultMap="QlCaseMaterialMap">
        select
            ID, CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL,AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS, CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER,ELEM_LICENSE_NAME,ELEM_LICENSE_NUMBER, DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG,ELECTRONIC_RESULT,ELEC_BILL_OID
        from t_ql_case_material
        where CASE_OID = #{caseOid} and DEL_FLAG=0
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.zfsoft.cases.dbaccess.data.DbQlCaseMaterial">
        insert into t_ql_case_material(CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL, AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS, CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER, ELEM_LICENSE_NAME,ELEM_LICENSE_NUMBER, DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE, MUST_FLAG, ELECTRONIC_RESULT,ELEC_BILL_OID)
        values (#{caseMaterialOid}, #{materialOid}, #{materialName}, #{materialCatalogOid}, #{baiduTemplateIds},#{materialSampleAddr}, #{materialSampleAddrYl}, #{auditType},  #{resultStatus},#{materialType},#{confirmStatus},#{caseOid}, #{collectionFlag}, #{collectionType}, #{collectionNumber}, #{collectionDate},#{elemLicenseOid},#{elemNumber}, #{elecLicenName},#{elecLicenNumber}, #{delFlag}, #{createDate}, #{createUserOid}, #{modifyDate}, #{mustFlag}, #{electronicResult},#{elecBillOid})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true" parameterType="com.zfsoft.cases.dbaccess.data.DbQlCaseMaterial">
        insert into t_ql_case_material(CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR,AUDIT_TYPE, MATERIAL_SAMPLE_ADDR_YL,AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS, CASE_OID, COLLECTION_FLAG,
        COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER, ELEM_LICENSE_NAME, ELEM_LICENSE_NUMBER,DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG, ELECTRONIC_RESULT,ELEC_BILL_OID)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.caseMaterialOid}, #{entity.materialOid}, #{entity.materialName}, #{entity.materialCatalogOid}, #{entity.baiduTemplateIds},#{entity.materialSampleAddr}, #{entity.auditType},#{entity.materialSampleAddrYl},#{entity.auditType},#{entity.resultStatus},#{entity.materialType},#{entity.confirmStatus}, #{entity.caseOid}, #{entity.collectionFlag},
            #{entity.collectionType}, #{entity.collectionNumber}, #{entity.collectionDate},#{entity.elemLicenseOid},#{entity.elemNumber}, #{entity.elecLicenName},#{entity.elecLicenNumber},  #{entity.delFlag},
            #{entity.createDate}, #{entity.createUserOid}, #{entity.modifyDate}, #{entity.mustFlag}, #{entity.electronicResult}, #{entity.elecBillOid})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into t_ql_case_material(CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL, AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS,CASE_OID, COLLECTION_FLAG,
        COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER,ELEM_LICENSE_NAME, ELEM_LICENSE_NUMBER, DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG, ELECTRONIC_RESULT,ELEC_BILL_OID)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.caseMaterialOid}, #{entity.materialOid}, #{entity.materialName}, #{entity.materialCatalogOid}, #{entity.baiduTemplateIds},#{entity.materialSampleAddr}, #{entity.materialSampleAddrYl},#{entity.auditType},
            #{entity.resultStatus},#{entity.materialType},#{entity.confirmStatus},#{entity.caseOid}, #{entity.collectionFlag},
            #{entity.collectionType}, #{entity.collectionNumber}, #{entity.collectionDate},#{entity.elemLicenseOid},#{entity.elemNumber}, #{entity.elecLicenName},#{entity.elecLicenNumber}, #{entity.delFlag},
            #{entity.createDate}, #{entity.createUserOid}, #{entity.modifyDate}, #{entity.mustFlag}, #{entity.electronicResult}, #{entity.elecBillOid})
        </foreach>
        on duplicate key update
        CASE_MATERIAL_OID = values(CASE_MATERIAL_OID) , MATERIAL_OID = values(MATERIAL_OID) , MATERIAL_NAME = values(MATERIAL_NAME) ,
        MATERIAL_CATALOG_OID = values(MATERIAL_CATALOG_OID), BAIDU_TEMPLATE_IDS = values(BAIDU_TEMPLATE_IDS)  , MATERIAL_SAMPLE_ADDR = values(MATERIAL_SAMPLE_ADDR)  ,
        MATERIAL_SAMPLE_ADDR_YL = values(MATERIAL_SAMPLE_ADDR_YL)  ,AUDIT_TYPE = values(AUDIT_TYPE) ,RESULT_STATUS = values(RESULT_STATUS) ,MATERIAL_TYPE = values(MATERIAL_TYPE),CONFIRM_STATUS = values(CONFIRM_STATUS)  , CASE_OID =
        values(CASE_OID) , COLLECTION_FLAG = values(COLLECTION_FLAG) , COLLECTION_TYPE = values(COLLECTION_TYPE) ,
        COLLECTION_NUMBER = values(COLLECTION_NUMBER) , COLLECTION_DATE = values(COLLECTION_DATE) ,ELEM_LICENSE_OID = values(ELEM_LICENSE_OID) ,ELEM_NUMBER = values(ELEM_NUMBER) ,
        ELEM_LICENSE_NAME=values(ELEM_LICENSE_NAME) , ELEM_LICENSE_NUMBER=values(ELEM_LICENSE_NUMBER) ,  DEL_FLAG =values(DEL_FLAG) , CREATE_DATE = values(CREATE_DATE) , CREATE_USER_OID = values(CREATE_USER_OID) , MODIFY_DATE = values(MODIFY_DATE) , MUST_FLAG = values(MUST_FLAG)
        , ELECTRONIC_RESULT = values(ELECTRONIC_RESULT), ELEC_BILL_OID = values(ELEC_BILL_OID)
    </insert>


    <!--通过主键修改数据-->
    <update id="update">
        update t_ql_case_material
        <set>
            <if test="caseMaterialOid != null and caseMaterialOid != ''">
                CASE_MATERIAL_OID = #{caseMaterialOid},
            </if>
            <if test="materialOid != null and materialOid != ''">
                MATERIAL_OID = #{materialOid},
            </if>
            <if test="materialName != null and materialName != ''">
                MATERIAL_NAME = #{materialName},
            </if>
            <if test="materialCatalogOid != null and materialCatalogOid != ''" >
                 MATERIAL_CATALOG_OID = #{materialCatalogOid},
            </if>
            <if test="baiduTemplateIds != null and baiduTemplateIds != ''" >
                 BAIDU_TEMPLATE_IDS = #{baiduTemplateIds},
            </if>
            <if test="materialSampleAddr != null and materialSampleAddr !=''">
                MATERIAL_SAMPLE_ADDR = #{materialSampleAddr},
            </if>
            <if test="materialSampleAddrYl != null and materialSampleAddrYl != ''" >
                MATERIAL_SAMPLE_ADDR_YL = #{materialSampleAddrYl},
            </if>
            <if test="auditType != null and auditType !='' ">
                AUDIT_TYPE = #{auditType},
            </if>
            <if test="resultStatus != null  and resultStatus !=''">
                RESULT_STATUS = #{resultStatus},
            </if>
            <if test="materialType != null and materialType != ''" >
                MATERIAL_TYPE = #{materialType},
            </if>
            <if test="confirmStatus != null  and confirmStatus !=''">
                CONFIRM_STATUS = #{confirmStatus},
            </if>
            <if test="caseOid != null and caseOid != ''">
                CASE_OID = #{caseOid},
            </if>
            <if test="collectionFlag != null and collectionFlag != ''  ">
                COLLECTION_FLAG = #{collectionFlag},
            </if>
            <if test="collectionType != null and collectionType != ''">
                COLLECTION_TYPE = #{collectionType},
            </if>
            <if test="collectionNumber != null and collectionNumber != ''">
                COLLECTION_NUMBER = #{collectionNumber},
            </if>
            <if test="collectionDate != null ">
                COLLECTION_DATE = #{collectionDate},
            </if>
            <if test="elemLicenseOid != null and elemLicenseOid != ''">
                ELEM_LICENSE_OID = #{elemLicenseOid},
            </if>
            <if test="elemNumber != null and elemNumber != ''">
                ELEM_NUMBER = #{elemNumber},
            </if>
            <if test="elecLicenName != null and elecLicenName != ''">
                ELEM_LICENSE_NAME = #{elecLicenName},
            </if>
            <if test="elecLicenNumber != null and elecLicenNumber != ''">
                ELEM_LICENSE_NUMBER = #{elecLicenNumber},
            </if>
            <if test="delFlag != null and delFlag != ''">
                DEL_FLAG = #{delFlag},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate},
            </if>
            <if test="createUserOid != null and createUserOid != ''">
                CREATE_USER_OID = #{createUserOid},
            </if>
            <if test="modifyDate != null">
                MODIFY_DATE = #{modifyDate},
            </if>
            <if test="mustFlag != null">
                MUST_FLAG = #{mustFlag},
            </if>
            <if test="electronicResult != null" >
                ELECTRONIC_RESULT = #{electronicResult},
            </if>
            <if test="elecBillOid != null">
                ELEC_BILL_OID = #{elecBillOid},
            </if>
        </set>
        where ID = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_ql_case_material where ID = #{id} and DEL_FLAG=0
    </delete>

    <select id="queryQlCaseMaterialByBillOid" parameterType="String" resultMap="QlCaseMaterialMap">
        select
            ID, CASE_MATERIAL_OID, MATERIAL_OID, MATERIAL_NAME,MATERIAL_CATALOG_OID,BAIDU_TEMPLATE_IDS,MATERIAL_SAMPLE_ADDR, MATERIAL_SAMPLE_ADDR_YL,AUDIT_TYPE,RESULT_STATUS,MATERIAL_TYPE,CONFIRM_STATUS, CASE_OID, COLLECTION_FLAG, COLLECTION_TYPE, COLLECTION_NUMBER, COLLECTION_DATE,ELEM_LICENSE_OID,ELEM_NUMBER,ELEM_LICENSE_NAME,ELEM_LICENSE_NUMBER, DEL_FLAG, CREATE_DATE, CREATE_USER_OID, MODIFY_DATE,MUST_FLAG,ELECTRONIC_RESULT,ELEC_BILL_OID
        from t_ql_case_material
        where CASE_OID = #{caseOid} and ELEC_BILL_OID= #{billOid} and DEL_FLAG=0
    </select>

</mapper>
