<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zfsoft.ha.dbaccess.dao.DbHaPerformancePlustimeRecordMapper">
  <resultMap id="BaseResultMap" type="com.zfsoft.ha.dbaccess.data.DbHaPerformancePlustimeRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="WORK_USER_OID" jdbcType="BIGINT" property="workUserOid" />
    <result column="WORK_USER_NAME" jdbcType="VARCHAR" property="workUserName" />
    <result column="PLUS_PROJECT_OID" jdbcType="BIGINT" property="plusProjectOid" />
    <result column="PLUS_DURATION" jdbcType="INTEGER" property="plusDuration" />
    <result column="ATTA_OID" jdbcType="VARCHAR" property="attaOid" />
    <result column="FASTDFS_UPLOAD_URL" jdbcType="VARCHAR" property="fastdfsUploadUrl" />
    <result column="FASTDFS_NGINX_URL" jdbcType="VARCHAR" property="fastdfsNginxUrl" />
    <result column="BONUS_NOTES" jdbcType="VARCHAR" property="bonusNotes" />
    <result column="AUDIT_STATUS" jdbcType="VARCHAR" property="auditStatus" />
    <result column="AUDIT_REASON" jdbcType="VARCHAR" property="auditReason" />
    <result column="GROUP_LEADER_ID" jdbcType="BIGINT" property="groupLeaderId" />
    <result column="GROUP_LEADER_NAME" jdbcType="VARCHAR" property="groupLeaderName" />
    <result column="DELETE_STATUS" jdbcType="VARCHAR" property="deleteStatus" />
    <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="AUDIT_DATE" jdbcType="TIMESTAMP" property="auditDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, WORK_USER_OID, WORK_USER_NAME, PLUS_PROJECT_OID, PLUS_DURATION, ATTA_OID, FASTDFS_UPLOAD_URL,FASTDFS_NGINX_URL,
    BONUS_NOTES, AUDIT_STATUS, AUDIT_REASON, GROUP_LEADER_ID, GROUP_LEADER_NAME, DELETE_STATUS,
    CREATE_BY, CREATE_DATE, UPDATE_BY, UPDATE_DATE,AUDIT_DATE
  </sql>
  <select id="selectByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaPerformancePlustimeRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_ha_performance_plustime_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_ha_performance_plustime_record
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_ha_performance_plustime_record
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaPerformancePlustimeRecordExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_ha_performance_plustime_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zfsoft.ha.dbaccess.data.DbHaPerformancePlustimeRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_ha_performance_plustime_record (WORK_USER_OID, WORK_USER_NAME,
      PLUS_PROJECT_OID, PLUS_DURATION, ATTA_OID, 
      FASTDFS_UPLOAD_URL,FASTDFS_NGINX_URL, BONUS_NOTES, AUDIT_STATUS,
      AUDIT_REASON, GROUP_LEADER_ID, GROUP_LEADER_NAME,
      DELETE_STATUS, CREATE_BY, CREATE_DATE, 
      UPDATE_BY, UPDATE_DATE, AUDIT_DATE)
    values (#{workUserOid,jdbcType=BIGINT}, #{workUserName,jdbcType=VARCHAR},
      #{plusProjectOid,jdbcType=BIGINT}, #{plusDuration,jdbcType=INTEGER}, #{attaOid,jdbcType=VARCHAR}, 
      #{fastdfsUploadUrl,jdbcType=VARCHAR},#{fastdfsNginxUrl,jdbcType=VARCHAR}, #{bonusNotes,jdbcType=VARCHAR}, #{auditStatus,jdbcType=VARCHAR},
      #{auditReason,jdbcType=VARCHAR}, #{groupLeaderId,jdbcType=BIGINT}, #{groupLeaderName,jdbcType=VARCHAR},
      #{deleteStatus,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{auditDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zfsoft.ha.dbaccess.data.DbHaPerformancePlustimeRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_ha_performance_plustime_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="workUserOid != null">
        WORK_USER_OID,
      </if>
      <if test="workUserName != null">
        WORK_USER_NAME,
      </if>
      <if test="plusProjectOid != null">
        PLUS_PROJECT_OID,
      </if>
      <if test="plusDuration != null">
        PLUS_DURATION,
      </if>
      <if test="attaOid != null">
        ATTA_OID,
      </if>
      <if test="fastdfsUploadUrl != null">
        FASTDFS_UPLOAD_URL,
      </if>
      <if test="fastdfsNginxUrl != null">
        FASTDFS_NGINX_URL,
      </if>
      <if test="bonusNotes != null">
        BONUS_NOTES,
      </if>
      <if test="auditStatus != null">
        AUDIT_STATUS,
      </if>
      <if test="auditReason != null">
        AUDIT_REASON,
      </if>
      <if test="groupLeaderId != null">
        GROUP_LEADER_ID,
      </if>
      <if test="groupLeaderName != null">
        GROUP_LEADER_NAME,
      </if>
      <if test="deleteStatus != null">
        DELETE_STATUS,
      </if>
      <if test="createBy != null">
        CREATE_BY,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
      <if test="auditDate != null">
        AUDIT_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="workUserOid != null">
        #{workUserOid,jdbcType=BIGINT},
      </if>
      <if test="workUserName != null">
        #{workUserName,jdbcType=VARCHAR},
      </if>
      <if test="plusProjectOid != null">
        #{plusProjectOid,jdbcType=BIGINT},
      </if>
      <if test="plusDuration != null">
        #{plusDuration,jdbcType=INTEGER},
      </if>
      <if test="attaOid != null">
        #{attaOid,jdbcType=VARCHAR},
      </if>
      <if test="fastdfsUploadUrl != null">
        #{fastdfsUploadUrl,jdbcType=VARCHAR},
      </if>
      <if test="fastdfsNginxUrl != null">
        #{fastdfsNginxUrl,jdbcType=VARCHAR},
      </if>
      <if test="bonusNotes != null">
        #{bonusNotes,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="auditReason != null">
        #{auditReason,jdbcType=VARCHAR},
      </if>
      <if test="groupLeaderId != null">
        #{groupLeaderId,jdbcType=BIGINT},
      </if>
      <if test="groupLeaderName != null">
        #{groupLeaderName,jdbcType=VARCHAR},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaPerformancePlustimeRecordExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_ha_performance_plustime_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_ha_performance_plustime_record
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.workUserOid != null">
        WORK_USER_OID = #{record.workUserOid,jdbcType=BIGINT},
      </if>
      <if test="record.workUserName != null">
        WORK_USER_NAME = #{record.workUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.plusProjectOid != null">
        PLUS_PROJECT_OID = #{record.plusProjectOid,jdbcType=BIGINT},
      </if>
      <if test="record.plusDuration != null">
        PLUS_DURATION = #{record.plusDuration,jdbcType=INTEGER},
      </if>
      <if test="record.attaOid != null">
        ATTA_OID = #{record.attaOid,jdbcType=VARCHAR},
      </if>
      <if test="record.fastdfsUploadUrl != null">
        FASTDFS_UPLOAD_URL = #{record.fastdfsUploadUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.fastdfsNginxUrl != null">
        FASTDFS_NGINX_URL = #{record.fastdfsNginxUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.bonusNotes != null">
        BONUS_NOTES = #{record.bonusNotes,jdbcType=VARCHAR},
      </if>
      <if test="record.auditStatus != null">
        AUDIT_STATUS = #{record.auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.auditReason != null">
        AUDIT_REASON = #{record.auditReason,jdbcType=VARCHAR},
      </if>
      <if test="record.groupLeaderId != null">
        GROUP_LEADER_ID = #{record.groupLeaderId,jdbcType=BIGINT},
      </if>
      <if test="record.groupLeaderName != null">
        GROUP_LEADER_NAME = #{record.groupLeaderName,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteStatus != null">
        DELETE_STATUS = #{record.deleteStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditDate != null">
        AUDIT_DATE = #{record.auditDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_ha_performance_plustime_record
    set ID = #{record.id,jdbcType=BIGINT},
      WORK_USER_OID = #{record.workUserOid,jdbcType=BIGINT},
      WORK_USER_NAME = #{record.workUserName,jdbcType=VARCHAR},
      PLUS_PROJECT_OID = #{record.plusProjectOid,jdbcType=BIGINT},
      PLUS_DURATION = #{record.plusDuration,jdbcType=INTEGER},
      ATTA_OID = #{record.attaOid,jdbcType=VARCHAR},
      FASTDFS_UPLOAD_URL = #{record.fastdfsUploadUrl,jdbcType=VARCHAR},
      FASTDFS_NGINX_URL = #{record.fastdfsNginxUrl,jdbcType=VARCHAR},
      BONUS_NOTES = #{record.bonusNotes,jdbcType=VARCHAR},
      AUDIT_STATUS = #{record.auditStatus,jdbcType=VARCHAR},
      AUDIT_REASON = #{record.auditReason,jdbcType=VARCHAR},
      GROUP_LEADER_ID = #{record.groupLeaderId,jdbcType=BIGINT},
      GROUP_LEADER_NAME = #{record.groupLeaderName,jdbcType=VARCHAR},
      DELETE_STATUS = #{record.deleteStatus,jdbcType=VARCHAR},
      CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      AUDIT_DATE = #{record.auditDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zfsoft.ha.dbaccess.data.DbHaPerformancePlustimeRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_ha_performance_plustime_record
    <set>
      <if test="workUserOid != null">
        WORK_USER_OID = #{workUserOid,jdbcType=BIGINT},
      </if>
      <if test="workUserName != null">
        WORK_USER_NAME = #{workUserName,jdbcType=VARCHAR},
      </if>
      <if test="plusProjectOid != null">
        PLUS_PROJECT_OID = #{plusProjectOid,jdbcType=BIGINT},
      </if>
      <if test="plusDuration != null">
        PLUS_DURATION = #{plusDuration,jdbcType=INTEGER},
      </if>
      <if test="attaOid != null">
        ATTA_OID = #{attaOid,jdbcType=VARCHAR},
      </if>
      <if test="fastdfsUploadUrl != null">
        FASTDFS_UPLOAD_URL = #{fastdfsUploadUrl,jdbcType=VARCHAR},
      </if>
      <if test="fastdfsNginxUrl != null">
        FASTDFS_NGINX_URL = #{fastdfsNginxUrl,jdbcType=VARCHAR},
      </if>
      <if test="bonusNotes != null">
        BONUS_NOTES = #{bonusNotes,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        AUDIT_STATUS = #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="auditReason != null">
        AUDIT_REASON = #{auditReason,jdbcType=VARCHAR},
      </if>
      <if test="groupLeaderId != null">
        GROUP_LEADER_ID = #{groupLeaderId,jdbcType=BIGINT},
      </if>
      <if test="groupLeaderName != null">
        GROUP_LEADER_NAME = #{groupLeaderName,jdbcType=VARCHAR},
      </if>
      <if test="deleteStatus != null">
        DELETE_STATUS = #{deleteStatus,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditDate != null">
        AUDIT_DATE = #{auditDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zfsoft.ha.dbaccess.data.DbHaPerformancePlustimeRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_ha_performance_plustime_record
    set WORK_USER_OID = #{workUserOid,jdbcType=BIGINT},
      WORK_USER_NAME = #{workUserName,jdbcType=VARCHAR},
      PLUS_PROJECT_OID = #{plusProjectOid,jdbcType=BIGINT},
      PLUS_DURATION = #{plusDuration,jdbcType=INTEGER},
      ATTA_OID = #{attaOid,jdbcType=VARCHAR},
      FASTDFS_UPLOAD_URL = #{fastdfsUploadUrl,jdbcType=VARCHAR},
      FASTDFS_NGINX_URL = #{fastdfsNginxUrl,jdbcType=VARCHAR},
      BONUS_NOTES = #{bonusNotes,jdbcType=VARCHAR},
      AUDIT_STATUS = #{auditStatus,jdbcType=VARCHAR},
      AUDIT_REASON = #{auditReason,jdbcType=VARCHAR},
      GROUP_LEADER_ID = #{groupLeaderId,jdbcType=BIGINT},
      GROUP_LEADER_NAME = #{groupLeaderName,jdbcType=VARCHAR},
      DELETE_STATUS = #{deleteStatus,jdbcType=VARCHAR},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      AUDIT_DATE = #{auditDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <!--根据DbHaPerformancePlustimeRecord查询 办事人绩效加分项目时长信息list-->
  <select id="queryHaPerformancePlustimeRecordList" parameterType="com.zfsoft.ha.dbaccess.data.DbHaPerformancePlustimeRecord"
          resultMap="BaseResultMap">
    SELECT * from t_ha_performance_plustime_record thr
    WHERE thr.DELETE_STATUS ='1'
    <if test="auditStatus != null and auditStatus != '' ">
      AND thr.AUDIT_STATUS = #{auditStatus}
    </if>
    <if test="plusProjectOid != null">
      AND thr.PLUS_PROJECT_OID=#{plusProjectOid}
    </if>
    <if test="workUserName != null">
      AND thr.WORK_USER_NAME like concat('%', #{workUserName}, '%')
    </if>
    <if test="groupLeaderId != null">
      AND (thr.WORK_USER_OID=#{workUserOid}
      OR thr.GROUP_LEADER_ID=#{groupLeaderId})
    </if>
    <if test="groupLeaderId == null">
      AND thr.WORK_USER_OID=#{workUserOid}
    </if>
    order by thr.CREATE_DATE desc
  </select>
</mapper>