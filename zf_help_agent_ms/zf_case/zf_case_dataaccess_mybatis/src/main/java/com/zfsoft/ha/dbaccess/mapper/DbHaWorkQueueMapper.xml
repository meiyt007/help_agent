<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zfsoft.ha.dbaccess.dao.DbHaWorkQueueMapper">
    <resultMap id="BaseResultMap" type="com.zfsoft.ha.dbaccess.data.DbHaWorkQueue">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <!--新增证件类型 20230310 zhaobf-->
        <result column="CARD_TYPE" jdbcType="VARCHAR" property="cardType"/>
        <result column="CARD_NO" jdbcType="VARCHAR" property="cardNo"/>
        <result column="PHONE" jdbcType="VARCHAR" property="phone"/>
        <result column="COMPANY_NAME" jdbcType="VARCHAR" property="companyName"/>
        <result column="COMPANY_CODE" jdbcType="VARCHAR" property="companyCode"/>
        <result column="QUEUE_STATUS" jdbcType="VARCHAR" property="queueStatus"/>
        <result column="DISTRIBUTE_STATUS" jdbcType="VARCHAR" property="distributeStatus"/>
        <result column="DISTRIBUTE_TIME" jdbcType="TIMESTAMP" property="distributeTime"/>
        <result column="SERVICE_STATUS" jdbcType="VARCHAR" property="serviceStatus"/>
        <result column="SERVICE_WORK_USER_ID" jdbcType="BIGINT" property="serviceWorkUserId"/>
        <result column="SERVICE_BEGIN_TIME" jdbcType="TIMESTAMP" property="serviceBeginTime"/>
        <result column="FIRST_SERVICE_BEGIN_TIME" jdbcType="TIMESTAMP" property="firstServiceBeginTime"/>
        <result column="SERVICE_END_TIME" jdbcType="TIMESTAMP" property="serviceEndTime"/>
        <result column="SERVICE_DURATION" jdbcType="INTEGER" property="serviceDuration"/>
        <result column="NEXT_SERVICE_ADVISE" jdbcType="VARCHAR" property="nextServiceAdvise"/>
        <!--新加字段DISTRIBUTION_ADVISE update by kangax at 2022/8/5/17:53-->
        <result column="DISTRIBUTION_ADVISE" jdbcType="VARCHAR" property="distributionAdvise"/>
        <result column="ADVISE_MEMO" jdbcType="VARCHAR" property="adviseMemo"/>
        <!--新加字段AGENT_TAKE_NUMBER update by kangax at 200/8/16/15:02-->
        <result column="AGENT_TAKE_NUMBER" jdbcType="VARCHAR" property="agentTakeNumber"/>
        <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy"/>
        <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy"/>
        <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="TAKE_NUMBER_TYPE" jdbcType="VARCHAR" property="takeNumberType"/>
        <result column="DETECTS_SERVICE_TIME" jdbcType="TIMESTAMP" property="detectsServiceTime"/>

    </resultMap>
    <!--检查排队情况-->
    <resultMap id="BaseResultqueuAndWork" type="com.zfsoft.ha.dbaccess.data.vo.DbWorkOrQueuVo">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="ID" jdbcType="BIGINT" property="queueId"/>
        <result column="WINDOWS_NUMBER" jdbcType="VARCHAR" property="workNumber"/>
        <result column="SERVICE_WORK_USER_ID" jdbcType="VARCHAR" property="serviceWorkUserId"/>
        <result column="NAME" jdbcType="VARCHAR" property="serviceUserName"/>
        <result column="WINDOWS_NUMBER" jdbcType="VARCHAR" property="windowsNumber"/>
        <result column="DISTRIBUTE_STATUS" jdbcType="VARCHAR" property="distributeStatus"/>
        <result column="QUEUE_STATUS" jdbcType="VARCHAR" property="queueStatus"/>
        <result column="SERVICE_STATUS" jdbcType="VARCHAR" property="serviceStatus"/>
        <result column="DISTRIBUTE_STATUS" jdbcType="VARCHAR" property="distributeStatus"/>
        <result column="WORK_NUMBER" jdbcType="VARCHAR" property="workNumber"/>
        <result column="AVG_SERVICE_TIME" jdbcType="INTEGER" property="avgServiceTime"/>
    </resultMap>
    <!-- 列表多对一配置 -->
    <resultMap id="queueAndUser" type="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkQueueVo">
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <!--新增证件类型 20230310 zhaobf-->
        <result column="CARD_TYPE" jdbcType="VARCHAR" property="cardType"/>
        <result column="CARD_NO" jdbcType="VARCHAR" property="cardNo"/>
        <result column="PHONE" jdbcType="VARCHAR" property="phone"/>
        <result column="COMPANY_NAME" jdbcType="VARCHAR" property="companyName"/>
        <result column="COMPANY_CODE" jdbcType="VARCHAR" property="companyCode"/>
        <result column="QUEUE_STATUS" jdbcType="VARCHAR" property="queueStatus"/>
        <result column="DISTRIBUTE_STATUS" jdbcType="VARCHAR" property="distributeStatus"/>
        <result column="DISTRIBUTE_TIME" jdbcType="TIMESTAMP" property="distributeTime"/>
        <result column="SERVICE_STATUS" jdbcType="VARCHAR" property="serviceStatus"/>
        <result column="SERVICE_WORK_USER_ID" jdbcType="BIGINT" property="serviceWorkUserId"/>
        <result column="SERVICE_BEGIN_TIME" jdbcType="TIMESTAMP" property="serviceBeginTime"/>
        <result column="FIRST_SERVICE_BEGIN_TIME" jdbcType="TIMESTAMP" property="firstServiceBeginTime"/>
        <result column="SERVICE_END_TIME" jdbcType="TIMESTAMP" property="serviceEndTime"/>
        <result column="SERVICE_DURATION" jdbcType="INTEGER" property="serviceDuration"/>
        <result column="NEXT_SERVICE_ADVISE" jdbcType="VARCHAR" property="nextServiceAdvise"/>
        <!--新加字段DISTRIBUTION_ADVISE update by kangax at 2022/8/5/17:53-->
        <result column="DISTRIBUTION_ADVISE" jdbcType="VARCHAR" property="distributionAdvise"/>
        <result column="ADVISE_MEMO" jdbcType="VARCHAR" property="adviseMemo"/>
        <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy"/>
        <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
        <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
        <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="SERVICE_USER_NAME" jdbcType="VARCHAR" property="serviceWorkUserName"/>
        <result column="GROUP_ID" jdbcType="BIGINT" property="groupId"/>
        <result column="GROUP_NAME" jdbcType="VARCHAR" property="groupName"/>
        <result column="TAKE_NUMBER_TYPE" jdbcType="VARCHAR" property="takeNumberType"/>
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkQueueVo">
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <!--新增证件类型 20230310 zhaobf-->
        <result column="CARD_TYPE" jdbcType="VARCHAR" property="cardType"/>
        <result column="CARD_NO" jdbcType="VARCHAR" property="cardNo"/>
        <result column="PHONE" jdbcType="VARCHAR" property="phone"/>
        <result column="COMPANY_NAME" jdbcType="VARCHAR" property="companyName"/>
        <result column="COMPANY_CODE" jdbcType="VARCHAR" property="companyCode"/>
        <result column="QUEUE_STATUS" jdbcType="VARCHAR" property="queueStatus"/>
        <result column="DISTRIBUTE_STATUS" jdbcType="VARCHAR" property="distributeStatus"/>
        <result column="SERVICE_STATUS" jdbcType="VARCHAR" property="serviceStatus"/>
        <result column="FIRST_SERVICE_BEGIN_TIME" jdbcType="TIMESTAMP" property="firstServiceBeginTime"/>
        <result column="SERVICE_BEGIN_TIME" jdbcType="TIMESTAMP" property="serviceBeginTime"/>
        <result column="WORK_USER_NAME" jdbcType="VARCHAR" property="serviceWorkUserName"/>
        <result column="SERVICE_END_TIME" jdbcType="TIMESTAMP" property="serviceEndTime"/>
        <result column="SERVICE_DURATION" jdbcType="INTEGER" property="serviceDuration"/>
        <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="CASE_NUMBER" jdbcType="VARCHAR" property="caseNumber"/>
        <result column="AGENT_TAKE_NUMBER" jdbcType="VARCHAR" property="agentTakeNumber"/>
        <result column="ADVISE_MEMO" jdbcType="VARCHAR" property="adviseMemo"/>
        <result column="TAKE_NUMBER_TYPE" jdbcType="VARCHAR" property="takeNumberType"/>
        <result column="SERVICE_WORK_USER_ID" jdbcType="BIGINT" property="serviceWorkUserId"/>
    </resultMap>
    <resultMap id="BaseResultMap3" type="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkQueueVo">
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="COMPANY_NAME" jdbcType="VARCHAR" property="companyName"/>
        <result column="SERVICE_TYPE" jdbcType="VARCHAR" property="serviceType"/>
        <result column="PUSH_TYPE" jdbcType="VARCHAR" property="pushType"/>
        <result column="SERVICE_MEMO" jdbcType="VARCHAR" property="serviceMemo"/>
        <result column="SX_SERVICE_ID" jdbcType="VARCHAR" property="sxServiceId"/>
        <result column="SERVICE_NAME" jdbcType="VARCHAR" property="sxServiceName"/>
        <result column="QL_CASE_ID" jdbcType="VARCHAR" property="qlCaseId"/>
        <result column="SERVICE_STATUS" jdbcType="VARCHAR" property="serviceStatus"/>
        <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
        <result column="PUSH_DATE" jdbcType="TIMESTAMP" property="pushDate" />
    </resultMap>

    <resultMap id="getServiceNum" type="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkQueueVo">
        <!--在这里映射要查询的列,只要定义实体就行了,不用映射到数据库表的列-->
        <result column="SERVICEING_NUM" jdbcType="INTEGER" property="serviceingNum"/>
        <result column="FINISHSERVICE_NUM" jdbcType="INTEGER" property="finishServiceNum"/>
        <!--        <result column="SERVICE_STATUS" jdbcType="VARCHAR" property="serviceStatus"/>-->
    </resultMap>

    <resultMap id="mapCount" type="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkQueueVo">
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <!--在这里映射要查询的列,只要定义实体就行了,不用映射到数据库表的列-->
        <result column="KUAIJIE" jdbcType="INTEGER" property="quickWaitNum"/>
        <result column="YUANZHUO" jdbcType="INTEGER" property="tableWaitNum"/>
        <!--        <result column="SERVICE_STATUS" jdbcType="VARCHAR" property="serviceStatus"/>-->
    </resultMap>

    <resultMap id="workUserList" type="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkQueueVo">
        <result column="ID" jdbcType="BIGINT" property="userId"/>
        <result column="NAME" jdbcType="VARCHAR" property="userName"/>
        <result column="ACCOUNT" jdbcType="TIMESTAMP" property="userAccount"/>
        <result column="HA_TYPE" jdbcType="VARCHAR" property="userHaType"/>
        <result column="STATUS" jdbcType="TIMESTAMP" property="userStatus"/>
        <result column="PHONE" jdbcType="INTEGER" property="userPhone"/>
        <result column="IMAGE" jdbcType="BIGINT" property="userImage"/>

        <result column="AVG_SERVICE_TIME" jdbcType="INTEGER" property="userAvgServiceTime"/>
        <result column="MAX_SERVICE_NUM" jdbcType="INTEGER" property="userMaxServiceNum"/>
        <result column="CURRENT_SERVICE_NUM" jdbcType="INTEGER" property="userCurrentServiceNum"/>
        <!--在这里映射要查询的列,只要定义实体就行了,不用映射到数据库表的列-->
        <result column="inServiceNum" jdbcType="INTEGER" property="inServiceNum"/>
        <result column="waitingNum" jdbcType="INTEGER" property="waitingNum"/>
        <result column="esuimateTime" jdbcType="INTEGER" property="esuimateTime"/>
        <result column="todayServiceNum" jdbcType="INTEGER" property="todayServiceNum"/>
    </resultMap>
    <resultMap id="workUserList2" type="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkUserVo">
        <result column="ID" jdbcType="BIGINT" property="id"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="ACCOUNT" jdbcType="TIMESTAMP" property="account"/>
        <result column="HA_TYPE" jdbcType="VARCHAR" property="haType"/>
        <result column="STATUS" jdbcType="TIMESTAMP" property="status"/>
        <result column="PHONE" jdbcType="INTEGER" property="phone"/>
        <result column="IMAGE" jdbcType="BIGINT" property="image"/>
        <result column="GROUP_ID" jdbcType="BIGINT" property="groupId"/>
        <result column="GROUP_NAME" jdbcType="VARCHAR" property="groupName"/>
        <result column="WORK_NUMBER" jdbcType="VARCHAR" property="workNumber"/>
        <!--新加字段AGENT_TAKE_NUMBER update by kangax at 200/8/16/15:02-->
<!--        <result column="AGENT_TAKE_NUMBER" jdbcType="VARCHAR" property="agentTakeNumber"/>-->
        <result column="AVG_SERVICE_TIME" jdbcType="INTEGER" property="avgServiceTime"/>
        <result column="MAX_SERVICE_NUM" jdbcType="INTEGER" property="maxServiceNum"/>
        <result column="CURRENT_SERVICE_NUM" jdbcType="INTEGER" property="currentServiceNum"/>
        <!--在这里映射要查询的列,只要定义实体就行了,不用映射到数据库表的列-->
        <result column="inServiceNum" jdbcType="INTEGER" property="inServiceNum"/>
        <result column="waitingNum" jdbcType="INTEGER" property="waitingNum"/>
        <result column="esuimateTime" jdbcType="INTEGER" property="esuimateTime"/>
        <result column="todayServiceNum" jdbcType="INTEGER" property="todayServiceNum"/>
    </resultMap>

    <resultMap id="workUserAndQueueList" type="com.zfsoft.ha.dbaccess.data.vo.HaWorkQueueResponseVo">
        <result column="ID" jdbcType="BIGINT" property="id"/>
        <result column="GROUP_ID" jdbcType="BIGINT" property="groupId"/>
        <result column="GROUP_NAME" jdbcType="VARCHAR" property="groupName"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="WORK_NUMBER" jdbcType="VARCHAR" property="workNumber"/>
        <result column="ACCOUNT" jdbcType="TIMESTAMP" property="account"/>
        <result column="HA_TYPE" jdbcType="VARCHAR" property="haType"/>
        <result column="STATUS" jdbcType="TIMESTAMP" property="status"/>
        <result column="PHONE" jdbcType="INTEGER" property="phone"/>
        <result column="IMAGE" jdbcType="BIGINT" property="image"/>

        <result column="AVG_SERVICE_TIME" jdbcType="INTEGER" property="avgServiceTime"/>
        <result column="MAX_SERVICE_NUM" jdbcType="INTEGER" property="maxServiceNum"/>
        <result column="CURRENT_SERVICE_NUM" jdbcType="INTEGER" property="currentServiceNum"/>
        <!--在这里映射要查询的列,只要定义实体就行了,不用映射到数据库表的列-->
        <result column="inServiceNum" jdbcType="INTEGER" property="inServiceNum"/>
        <result column="waitingNum" jdbcType="INTEGER" property="waitingNum"/>
        <result column="esuimateTime" jdbcType="INTEGER" property="esuimateTime"/>
        <result column="todayServiceNum" jdbcType="INTEGER" property="todayServiceNum"/>
        <!--20230307新增-->

        <result column="GROUP_SPLIT_ID" jdbcType="BIGINT" property="groupSplitId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">


        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        ID, NAME,CARD_TYPE, CARD_NO, PHONE, COMPANY_NAME, COMPANY_CODE, WINDOWS_NUMBER,QUEUE_STATUS, DISTRIBUTE_STATUS,
        DISTRIBUTE_TIME, SERVICE_STATUS, SERVICE_WORK_USER_ID, SERVICE_BEGIN_TIME, FIRST_SERVICE_BEGIN_TIME,
        SERVICE_END_TIME,
        SERVICE_DURATION, NEXT_SERVICE_ADVISE, ADVISE_MEMO, CREATE_BY, CREATE_DATE, UPDATE_BY,
        UPDATE_DATE,TAKE_NUMBER_TYPE,DETECTS_SERVICE_TIME
    </sql>

    <!--获取排队人数及预计耗时接口 -万行-->
    <select id="getWorkUser" resultMap="workUserAndQueueList">
        select
        count(case a.SERVICE_STATUS when '1' then 1 end ) as waitingNum ,-- 等待的人数,
        count(case a.SERVICE_STATUS when '1' then 1 end ) * b.AVG_SERVICE_TIME as esuimateTime -- 预计等待时间
        FROM
        t_ha_help_work_user b
        left join
        t_ha_work_queue a
        on a.SERVICE_WORK_USER_ID = b.ID
        <if test="startTime != null"><!-- 开始时间检索 -->
            AND a.DISTRIBUTE_TIME &gt;= #{startTime}
        </if>
        <if test="endTime != null"><!-- 结束时间检索 -->
            AND a.DISTRIBUTE_TIME &lt;= #{endTime}
        </if>
        WHERE
        b.DELETE_STATUS ='1'
        AND a.QUEUE_STATUS=2
        AND a.SERVICE_WORK_USER_ID=#{workUserID}
    </select>
    <!--办事人定时任务：列表查询-->
    <select id="queryQueueList" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from t_ha_work_queue
        <where>
            QUEUE_STATUS = '1'  -- 此条数据可以写死，因为是定时器的主要条件
            <if test="startTime != null"><!-- 开始时间检索 -->
                AND CREATE_DATE &gt;= #{startTime}
            </if>
            <if test="endTime != null "><!-- 结束时间检索 -->
                AND CREATE_DATE &lt;= #{endTime}
            </if>
        </where>
        order by CREATE_DATE desc
    </select>

    <!--办事人定时任务：列表查询，查询当天服务状态：服务中，结束服务时间：空的数据列表-->
    <select id="queryQueueListByServiceStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_ha_work_queue
        <where>
            SERVICE_STATUS = '2'  -- 此条数据可以写死，因为是定时器的主要条件
            AND SERVICE_END_TIME IS NULL
            <if test="startTime != null"><!-- 开始时间检索 -->
                AND CREATE_DATE &gt;= #{startTime}
            </if>
            <if test="endTime != null "><!-- 结束时间检索 -->
                AND CREATE_DATE &lt;= #{endTime}
            </if>
        </where>
        order by CREATE_DATE desc
    </select>

    <!--分配帮代办人员:1.必须传递帮代办人员编号，分配状态;1-指定人员 -->
    <update id="update" parameterType="java.lang.Long">
        update t_ha_work_queue
        <set>
            <if test="distributeUserId !=null and distributeUserId !=''">
                DISTRIBUTE_USER_ID = #{distributeUserId}, -- 分配人
            </if>
            <if test="updateBy !=null and updateBy !=''">
                UPDATE_BY = #{updateBy}, -- 更新人姓名
            </if>
            <if test="distributeStatus != null and distributeStatus !=''">
                DISTRIBUTE_STATUS = #{distributeStatus}, -- 分配状态;1-指定人员，2-随机分配，3-窗口办理
            </if>
            -- 判断是为窗口办理
            <if test="distributeStatus != null and distributeStatus !='' and distributeStatus =='3'">
                SERVICE_STATUS = '3' , -- 服务状态为 3 已完成
                SERVICE_DURATION = 0, -- 服务时长为0
                SERVICE_BEGIN_TIME =NOW(), -- 开始时间为当前时间
                SERVICE_END_TIME= NOW(), -- 结束时间为当前时间
            </if>
            <if test="windowsNumbe != null and windowsNumbe !=''">
                WINDOWS_NUMBER = #{windowsNumbe}, -- 排队号
            </if>
            <if test="distributeStatus != null and distributeStatus !='' and distributeStatus !='3'">
                SERVICE_STATUS = '1', -- 服务状态
            </if>
            <if test="workUserId != null">
                SERVICE_WORK_USER_ID = #{workUserId}, -- 帮代办人员编号
            </if>
            UPDATE_DATE = #{updateDate}, -- 更新时间
            QUEUE_STATUS = '2'
        </set>
        where ID = #{queueId} -- 队列编号
    </update>
    <!--获取帮代办人员列表-->
    <select id="getWorkUserList" resultMap="workUserAndQueueList">
        select
            b.ID as ID, -- 人员编号
            b.GROUP_ID, -- 分组id
            c.NAME as GROUP_NAME,
            b.WORK_NUMBER, -- 工号
            b.NAME as NAME , -- 姓名
            b.ACCOUNT as ACCOUNT, -- 账号
            b.HA_TYPE as HA_TYPE, -- 帮代办类型，1-快捷帮办，2-圆桌帮办
            b.STATUS as STATUS, -- 状态，
            b.PHONE as PHONE, -- 手机号
            b.IMAGE as IMAGE, -- 头像
            b.AVG_SERVICE_TIME as AVG_SERVICE_TIME, -- 每个人平均时长
            b.MAX_SERVICE_NUM as MAX_SERVICE_NUM, -- 最大服务人数
            b.CURRENT_SERVICE_NUM as CURRENT_SERVICE_NUM, -- 当前服务人数
            count(case a.SERVICE_STATUS when '2' then 1 end ) as inServiceNum, -- 正在服务的人数,
            count(case a.SERVICE_STATUS when '1' then 1 end ) as waitingNum ,-- 等待的人数,
            count(case a.SERVICE_STATUS when '1' then 1 end ) * b.AVG_SERVICE_TIME as esuimateTime, -- 预计等待时间
            count(case a.SERVICE_STATUS when '3' then 1 end ) as todayServiceNum -- 今日已服务人数
        FROM
            t_ha_help_work_user b
        left join
            t_ha_work_queue a
        on a.SERVICE_WORK_USER_ID = b.ID
            <if test="start != null"><!-- 开始时间检索 -->
                AND a.DISTRIBUTE_TIME &gt;= #{start}
            </if>
            <if test="end != null "><!-- 结束时间检索 -->
                AND a.DISTRIBUTE_TIME &lt;= #{end}
            </if>
            AND a.QUEUE_STATUS=2
        left join
            t_ha_work_user_group	c
        on  b.GROUP_ID = c.ID
        WHERE
            b.DELETE_STATUS ='1'
            <if test="name != null and name != ''">
                and b.NAME = #{name}
            </if>
            <if test="haType != null and haType != ''">
                and b.HA_TYPE=#{haType}
            </if>
            <if test="groupId != null">
            and b.GROUP_ID=#{groupId}
            </if>
        GROUP BY
            a.SERVICE_WORK_USER_ID,b.CREATE_DATE
        ORDER BY
            b.CREATE_DATE desc
    </select>

    <!--获取帮代办人员列表-->
    <select id="getAllUserListByGroupSplit" resultMap="workUserAndQueueList">
        select
        b.ID as ID, -- 人员编号
        b.GROUP_ID, -- 分组id
        b.GROUP_SPLIT_ID, -- 分组id
        c.NAME as GROUP_NAME,
        b.WORK_NUMBER, -- 工号
        b.NAME as NAME , -- 姓名
        b.ACCOUNT as ACCOUNT, -- 账号
        b.HA_TYPE as HA_TYPE, -- 帮代办类型，1-快捷帮办，2-圆桌帮办
        b.STATUS as STATUS, -- 状态，
        b.PHONE as PHONE, -- 手机号
        b.IMAGE as IMAGE, -- 头像
        b.AVG_SERVICE_TIME as AVG_SERVICE_TIME, -- 每个人平均时长
        b.MAX_SERVICE_NUM as MAX_SERVICE_NUM, -- 最大服务人数
        b.CURRENT_SERVICE_NUM as CURRENT_SERVICE_NUM, -- 当前服务人数
        count(case a.SERVICE_STATUS when '2' then 1 end ) as inServiceNum, -- 正在服务的人数,
        count(case a.SERVICE_STATUS when '1' then 1 end ) as waitingNum ,-- 等待的人数,
        count(case a.SERVICE_STATUS when '1' then 1 end ) * b.AVG_SERVICE_TIME as esuimateTime, -- 预计等待时间
        count(case a.SERVICE_STATUS when '3' then 1 end ) as todayServiceNum -- 今日已服务人数
        FROM
        t_ha_help_work_user b
        left join
        t_ha_work_queue a
        on a.SERVICE_WORK_USER_ID = b.ID
        <if test="start != null"><!-- 开始时间检索 -->
            AND a.DISTRIBUTE_TIME &gt;= #{start}
        </if>
        <if test="end != null "><!-- 结束时间检索 -->
            AND a.DISTRIBUTE_TIME &lt;= #{end}
        </if>
        AND a.QUEUE_STATUS=2
        left join
        t_ha_work_user_group	c
        on  b.GROUP_ID = c.ID
        WHERE
        b.DELETE_STATUS ='1'
        <if test="name != null and name != ''">
            and b.NAME = #{name}
        </if>
        <if test="haType != null and haType != ''">
            and b.HA_TYPE=#{haType}
        </if>
        <if test="groupId != null">
            and b.GROUP_ID=#{groupId}
        </if>
        <if test="groupSplitId != null">
            and b.GROUP_SPLIT_ID=#{groupSplitId}
        </if>
        GROUP BY
        a.SERVICE_WORK_USER_ID,b.CREATE_DATE
        ORDER BY
        b.CREATE_DATE desc
    </select>


    <!--获取帮代办人员列表-->
    <select id="getWorkUserListByName" resultMap="workUserAndQueueList">
        select
        b.ID as ID, -- 人员编号
        b.GROUP_ID, -- 分组id
        c.NAME as GROUP_NAME,
        b.WORK_NUMBER, -- 工号
        b.NAME as NAME , -- 姓名
        b.ACCOUNT as ACCOUNT, -- 账号
        b.HA_TYPE as HA_TYPE, -- 帮代办类型，1-快捷帮办，2-圆桌帮办
        b.STATUS as STATUS, -- 状态，
        b.PHONE as PHONE, -- 手机号
        b.IMAGE as IMAGE, -- 头像
        b.AVG_SERVICE_TIME as AVG_SERVICE_TIME, -- 每个人平均时长
        b.MAX_SERVICE_NUM as MAX_SERVICE_NUM, -- 最大服务人数
        b.CURRENT_SERVICE_NUM as CURRENT_SERVICE_NUM, -- 当前服务人数
        count(case a.SERVICE_STATUS when '2' then 1 end ) as inServiceNum, -- 正在服务的人数,
        count(case a.SERVICE_STATUS when '1' then 1 end ) as waitingNum ,-- 等待的人数,
        count(case a.SERVICE_STATUS when '1' then 1 end ) * b.AVG_SERVICE_TIME as esuimateTime, -- 预计等待时间
        count(case a.SERVICE_STATUS when '3' then 1 end ) as todayServiceNum -- 今日已服务人数
        FROM
        t_ha_help_work_user b
        left join
        t_ha_work_queue a
        on a.SERVICE_WORK_USER_ID = b.ID
        AND a.QUEUE_STATUS=2
        left join
        t_ha_work_user_group	c
        on  b.GROUP_ID = c.ID
        WHERE
        b.DELETE_STATUS ='1'
        <if test="name != null and name != ''">
            and b.NAME  like concat('%',#{name}, '%')
        </if>
        <if test="haType != null and haType != ''">
            and b.HA_TYPE=#{haType}
        </if>
        <if test="groupId != null">
            and b.GROUP_ID=#{groupId}
        </if>
        GROUP BY
        a.SERVICE_WORK_USER_ID,b.CREATE_DATE
        ORDER BY
        b.CREATE_DATE desc
    </select>

    <!--获取用户组列表-->
    <select id="getWorkUserGroupList" resultMap="workUserList2">
    select
        b.ID as ID, -- 人员编号
        b.NAME as NAME , -- 姓名
        b.ACCOUNT as ACCOUNT, -- 账号
        b.HA_TYPE as HA_TYPE, -- 帮代办类型，1-快捷帮办，2-圆桌帮办
        b.STATUS as STATUS, -- 状态，
        b.PHONE as PHONE, -- 手机号
        b.IMAGE as IMAGE, -- 头像
        b.GROUP_ID as GROUP_ID,
        c.NAME as GROUP_NAME,
        b.WORK_NUMBER as WORK_NUMBER,
        b.AVG_SERVICE_TIME as AVG_SERVICE_TIME, -- 每个人平均时长
        b.MAX_SERVICE_NUM as MAX_SERVICE_NUM, -- 最大服务人数
        b.CURRENT_SERVICE_NUM as CURRENT_SERVICE_NUM, -- 当前服务人数
        count(case a.SERVICE_STATUS when '2' then 1 end ) as inServiceNum, -- 正在服务的人数,
        count(case a.SERVICE_STATUS when '1' then 1 end ) as waitingNum ,-- 等待的人数,
        count(case a.SERVICE_STATUS when '1' then 1 end ) * b.AVG_SERVICE_TIME as esuimateTime, -- 预计等待时间
        count(case a.SERVICE_STATUS when '3' then 1 end ) as todayServiceNum -- 今日已服务人数
    FROM
        t_ha_help_work_user b
    left join
        t_ha_work_queue a
    on a.SERVICE_WORK_USER_ID = b.ID
        <if test="start != null"><!-- 开始时间检索 -->
            AND a.DISTRIBUTE_TIME &gt;= #{start}
        </if>
        <if test="end != null "><!-- 结束时间检索 -->
            AND a.DISTRIBUTE_TIME &lt;= #{end}
        </if>
        AND a.QUEUE_STATUS=2
    left join
        t_ha_work_user_group c
    on  b.GROUP_ID = c.ID and c.DELETE_STATUS ='1'
    where
        b.DELETE_STATUS ='1'
        and b.GROUP_ID in(select GROUP_ID from t_ha_help_work_user where id = #{id})
    GROUP BY a.SERVICE_WORK_USER_ID,b.CREATE_DATE
    ORDER BY b.CREATE_DATE desc
    </select>
    <!--统计总服务人数,自第一天运行到当前时间的，不是当天的总人数-->
    <select id="selectTotalServiceNum" resultType="java.lang.Integer">
        select count(case a.SERVICE_STATUS when 3 then 3 end) as SERVICE_STATUS
        FROM t_ha_help_work_user b
                 left join
             t_ha_work_queue a
        on a.SERVICE_WORK_USER_ID = b.ID
        WHERE
              b.DELETE_STATUS = '1' -- 是否删除
          AND a.QUEUE_STATUS = '2' -- 1-扫码排队中，2-导服已分配

    </select>
    <!--统计快捷帮办和圆桌帮办的等待人数-->
    <select id="selectQueueNums" resultMap="mapCount">
        select count(case b.HA_TYPE when 1 then 1 end)           KUAIJIE,
               count(case b.HA_TYPE when '2' then '2' end)       YUANZHUO
        FROM t_ha_help_work_user b
        left join
             t_ha_work_queue a
        on a.SERVICE_WORK_USER_ID = b.ID
        <where>
            <if test="start != null"><!-- 开始时间检索 -->
                AND a.DISTRIBUTE_TIME &gt;= #{start}
            </if>
            <if test="end != null "><!-- 结束时间检索 -->
                AND a.DISTRIBUTE_TIME &lt;= #{end}
            </if>-- 根据当天时间进行筛选
            AND b.DELETE_STATUS = '1'                         -- 是否删除 1是为删除
            AND a.QUEUE_STATUS = '2'                          -- 1-扫码排队中，2-导服已分配
            AND a.SERVICE_STATUS = '1' -- 排队状态 1-扫码排队中，2-导服已分配
        </where>
    </select>
    <!--关联用户表查询-->
    <select id="selectByQueueAndUser" resultMap="queueAndUser">
    select
        a.ID,
        a.NAME,
        a.CARD_TYPE,
        a.CARD_NO,
        a.PHONE,
        a.COMPANY_NAME,
        a.COMPANY_CODE,
        a.QUEUE_STATUS,
        a.DISTRIBUTE_STATUS,
        a.DISTRIBUTE_TIME,
        a.SERVICE_STATUS,
        a.SERVICE_WORK_USER_ID,
        a.SERVICE_BEGIN_TIME,
        a.SERVICE_END_TIME,
        a.SERVICE_DURATION,
        a.NEXT_SERVICE_ADVISE,
        a.ADVISE_MEMO,
        a.CREATE_BY,
        a.UPDATE_DATE,
        b.NAME as SERVICE_USER_NAME
    from
        t_ha_work_queue a
    left join
        t_ha_help_work_user b
    on a.SERVICE_WORK_USER_ID = b.ID
        <where>
            <!--            <if test="serviceWorkUserId != null">-->
            <!--                and a.SERVICE_WORK_USER_ID=#{serviceWorkUserId}-->
            <!--            </if>-->
            <if test="name != null and name !=''">
                and a.NAME = #{name}
            </if>
            <if test="cardNo != null and cardNo !=''">
                and a.CARD_NO=#{cardNo}
            </if>
            <if test="companyName != null and companyName !=''">
                and a.COMPANY_NAME=#{companyName}
            </if>
            <if test="queueStatus != null and queueStatus !=''">
                and a.QUEUE_STATUS=#{queueStatus}
            </if>
            <if test="serviceStatus != null and serviceStatus !=''">
                and a.SERVICE_STATUS=#{serviceStatus}
            </if>
        </where>
        order by a.CREATE_DATE desc
    </select>

    <select id="selectByQueueAndUserGroup" resultMap="queueAndUser">
        select
        a.NAME,
        a.CARD_TYPE,
        a.CARD_NO,
        a.PHONE,
        a.COMPANY_NAME,
        a.COMPANY_CODE,
        a.QUEUE_STATUS,
        a.DISTRIBUTE_STATUS,
        a.DISTRIBUTE_TIME,
        a.SERVICE_STATUS,
        a.SERVICE_WORK_USER_ID,
        a.SERVICE_BEGIN_TIME,
        a.SERVICE_END_TIME,
        a.SERVICE_DURATION,
        a.NEXT_SERVICE_ADVISE,
        a.ADVISE_MEMO,
        a.CREATE_BY,
        a.UPDATE_DATE,
        b.NAME as SERVICE_USER_NAME,
        b.GROUP_ID,
        c.NAME as GROUP_NAME
    from
        t_ha_work_queue a
    left join
        t_ha_help_work_user b
    on a.SERVICE_WORK_USER_ID = b.ID
    left join
        t_ha_work_user_group c
    on c.ID = b.GROUP_ID
        <where>
            <if test="serviceWorkUserId != null">
                and b.GROUP_ID in(select GROUP_ID from t_ha_help_work_user where id = #{serviceWorkUserId})
            </if>
            <if test="name != null and name !=''">
                and a.NAME = #{name}
            </if>
            <if test="cardNo != null and cardNo !=''">
                and a.CARD_NO=#{cardNo}
            </if>
            <if test="companyName != null and companyName !=''">
                and a.COMPANY_NAME=#{companyName}
            </if>
            <if test="queueStatus != null and queueStatus !=''">
                and a.QUEUE_STATUS=#{queueStatus}
            </if>
            <if test="serviceStatus != null and serviceStatus !=''">
                and a.SERVICE_STATUS=#{serviceStatus}
            </if>
        </where>
        order by a.CREATE_DATE desc
    </select>
    <select id="selectByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaWorkQueueExample"
            resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_ha_work_queue
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="getServiceNum" resultMap="getServiceNum">
        select
            count(case a.SERVICE_STATUS when '2' then 1 end ) as SERVICEING_NUM,
            count(case a.SERVICE_STATUS when '3' then 1 end ) as FINISHSERVICE_NUM
        from t_ha_work_queue a
        where
            a.SERVICE_WORK_USER_ID = #{userId}

    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from t_ha_work_queue
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectVoByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap2">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        tq.ID,tq.NAME,tq.CARD_TYPE,tq.CARD_NO,tq.PHONE,tq.COMPANY_NAME,tq.COMPANY_CODE,tq.QUEUE_STATUS,tq.CREATE_DATE,tq.DISTRIBUTE_STATUS,tq.SERVICE_STATUS,
        tq.SERVICE_BEGIN_TIME,tq.FIRST_SERVICE_BEGIN_TIME,tq.SERVICE_END_TIME,tq.SERVICE_DURATION,tu.NAME as WORK_USER_NAME
        from t_ha_work_queue tq,t_ha_help_work_user tu
        where tu.DELETE_STATUS='1'
         and tq.SERVICE_WORK_USER_ID=tu.ID
         and tq.ID = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_ha_work_queue
        where ID = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaWorkQueueExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_ha_work_queue
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkQueue" useGeneratedKeys="true"
            keyProperty="id">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_ha_work_queue ( NAME, CARD_TYPE, CARD_NO,
        PHONE, COMPANY_NAME, COMPANY_CODE,
        QUEUE_STATUS, DISTRIBUTE_STATUS, DISTRIBUTE_TIME,
        SERVICE_STATUS, SERVICE_WORK_USER_ID, SERVICE_BEGIN_TIME,
        FIRST_SERVICE_BEGIN_TIME,
        SERVICE_END_TIME, SERVICE_DURATION, NEXT_SERVICE_ADVISE,
        DISTRIBUTION_ADVISE,
        ADVISE_MEMO, WINDOWS_NUMBER, AGENT_TAKE_NUMBER,CREATE_BY, CREATE_DATE,
        UPDATE_BY, UPDATE_DATE,DISTRIBUTE_USER_ID,TAKE_NUMBER_TYPE,DETECTS_SERVICE_TIME)
        values ( #{name,jdbcType=VARCHAR}, #{cardType,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, #{companyCode,jdbcType=VARCHAR},
        #{queueStatus,jdbcType=VARCHAR}, #{distributeStatus,jdbcType=VARCHAR}, #{distributeTime,jdbcType=TIMESTAMP},
        #{serviceStatus,jdbcType=VARCHAR}, #{serviceWorkUserId,jdbcType=INTEGER},
        #{serviceBeginTime,jdbcType=TIMESTAMP},
        #{firstServiceBeginTime,jdbcType=TIMESTAMP},
        #{serviceEndTime,jdbcType=TIMESTAMP}, #{serviceDuration,jdbcType=INTEGER},
        #{nextServiceAdvise,jdbcType=VARCHAR},
        #{distributionAdvise,jdbcType=VARCHAR},
        #{adviseMemo,jdbcType=VARCHAR}, #{windowsNumber,jdbcType=VARCHAR}, #{agentTakeNumber,jdbcType=VARCHAR},#{createBy,jdbcType=VARCHAR},
        #{createDate,jdbcType=TIMESTAMP},
        #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP},#{distributeUserId,jdbcType=INTEGER},
        #{takeNumberType,jdbcType=VARCHAR},#{detectsServiceTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkQueue" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_ha_work_queue
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <!--      <if test="id != null">-->
            <!--        ID,-->
            <!--      </if>-->
            <if test="name != null">
                NAME,
            </if>
            <if test="cardType != null">
                CARD_TYPE,
            </if>
            <if test="cardNo != null">
                CARD_NO,
            </if>
            <if test="phone != null">
                PHONE,
            </if>
            <if test="companyName != null">
                COMPANY_NAME,
            </if>
            <if test="companyCode != null">
                COMPANY_CODE,
            </if>
            <if test="queueStatus != null">
                QUEUE_STATUS,
            </if>
            <if test="distributeStatus != null">
                DISTRIBUTE_STATUS,
            </if>
            <if test="distributeTime != null">
                DISTRIBUTE_TIME,
            </if>
            <if test="serviceStatus != null">
                SERVICE_STATUS,
            </if>
            <if test="serviceWorkUserId != null">
                SERVICE_WORK_USER_ID,
            </if>
            <if test="serviceBeginTime != null">
                SERVICE_BEGIN_TIME,
            </if>
            <if test="firstServiceBeginTime != null">
                FIRST_SERVICE_BEGIN_TIME,
            </if>
            <if test="serviceEndTime != null">
                SERVICE_END_TIME,
            </if>
            <if test="serviceDuration != null">
                SERVICE_DURATION,
            </if>
            <if test="nextServiceAdvise != null">
                NEXT_SERVICE_ADVISE,
            </if>
            <if test="distributionAdvise != null">
                DISTRIBUTION_ADVISE,
            </if>
            <if test="adviseMemo != null">
                ADVISE_MEMO,
            </if>
            <if test="createBy != null">
                CREATE_BY,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updateBy != null">
                UPDATE_BY,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
            <if test="takeNumberType != null">
                TAKE_NUMBER_TYPE,
            </if>
            <if test="detectsServiceTime != null">
                DETECTS_SERVICE_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <!--      <if test="id != null">-->
            <!--        #{id,jdbcType=BIGINT},-->
            <!--      </if>-->
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="cardType != null">
                #{cardType,jdbcType=VARCHAR},
            </if>
            <if test="cardNo != null">
                #{cardNo,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null">
                #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="companyCode != null">
                #{companyCode,jdbcType=VARCHAR},
            </if>
            <if test="queueStatus != null">
                #{queueStatus,jdbcType=VARCHAR},
            </if>
            <if test="distributeStatus != null">
                #{distributeStatus,jdbcType=VARCHAR},
            </if>
            <if test="distributeTime != null">
                #{distributeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceStatus != null">
                #{serviceStatus,jdbcType=VARCHAR},
            </if>
            <if test="serviceWorkUserId != null">
                #{serviceWorkUserId,jdbcType=INTEGER},
            </if>
            <if test="serviceBeginTime != null">
                #{serviceBeginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="firstServiceBeginTime != null">
                #{serviceBeginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceEndTime != null">
                #{serviceEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceDuration != null">
                #{serviceDuration,jdbcType=INTEGER},
            </if>
            <if test="nextServiceAdvise != null">
                #{nextServiceAdvise,jdbcType=VARCHAR},
            </if>
            <if test="distributionAdvise != null">
                #{distributionAdvise,jdbcType=VARCHAR},
            </if>
            <if test="adviseMemo != null">
                #{adviseMemo,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="takeNumberType != null">
                #{takeNumberType,jdbcType=VARCHAR},
            </if>
            <if test="detectsServiceTime != null">
                #{detectsServiceTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaWorkQueueExample"
            resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from t_ha_work_queue
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_ha_work_queue
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                NAME = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.cardType != null">
                CARD_TYPE = #{record.cardType,jdbcType=VARCHAR},
            </if>
            <if test="record.cardNo != null">
                CARD_NO = #{record.cardNo,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                PHONE = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.companyName != null">
                COMPANY_NAME = #{record.companyName,jdbcType=VARCHAR},
            </if>
            <if test="record.companyCode != null">
                COMPANY_CODE = #{record.companyCode,jdbcType=VARCHAR},
            </if>
            <if test="record.queueStatus != null">
                QUEUE_STATUS = #{record.queueStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.distributeStatus != null">
                DISTRIBUTE_STATUS = #{record.distributeStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.distributeTime != null">
                DISTRIBUTE_TIME = #{record.distributeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.serviceStatus != null">
                SERVICE_STATUS = #{record.serviceStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.serviceWorkUserId != null">
                SERVICE_WORK_USER_ID = #{record.serviceWorkUserId,jdbcType=INTEGER},
            </if>
            <if test="record.serviceBeginTime != null">
                SERVICE_BEGIN_TIME = #{record.serviceBeginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.firstServiceBeginTime != null">
                FIRST_SERVICE_BEGIN_TIME = #{record.firstServiceBeginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.serviceEndTime != null">
                SERVICE_END_TIME = #{record.serviceEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.serviceDuration != null">
                SERVICE_DURATION = #{record.serviceDuration,jdbcType=INTEGER},
            </if>
            <if test="record.nextServiceAdvise != null">
                NEXT_SERVICE_ADVISE = #{record.nextServiceAdvise,jdbcType=VARCHAR},
            </if>
            <if test="record.distributionAdvise != null">
                DISTRIBUTION_ADVISE= #{record.distributionAdvise,jdbcType=VARCHAR},
            </if>
            <if test="record.adviseMemo != null">
                ADVISE_MEMO = #{record.adviseMemo,jdbcType=VARCHAR},
            </if>
            <if test="record.createBy != null">
                CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="record.updateDate != null">
                UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.takeNumberType != null">
                TAKE_NUMBER_TYPE = #{record.takeNumberType,jdbcType=VARCHAR},
            </if>
            <if test="record.detectsServiceTime != null">
                DETECTS_SERVICE_TIME = #{record.detectsServiceTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_ha_work_queue
        set ID = #{record.id,jdbcType=BIGINT},
        NAME = #{record.name,jdbcType=VARCHAR},
        CARD_TYPE = #{record.cardType,jdbcType=VARCHAR},
        CARD_NO = #{record.cardNo,jdbcType=VARCHAR},
        PHONE = #{record.phone,jdbcType=VARCHAR},
        COMPANY_NAME = #{record.companyName,jdbcType=VARCHAR},
        COMPANY_CODE = #{record.companyCode,jdbcType=VARCHAR},
        QUEUE_STATUS = #{record.queueStatus,jdbcType=VARCHAR},
        DISTRIBUTE_STATUS = #{record.distributeStatus,jdbcType=VARCHAR},
        DISTRIBUTE_TIME = #{record.distributeTime,jdbcType=TIMESTAMP},
        SERVICE_STATUS = #{record.serviceStatus,jdbcType=VARCHAR},
        SERVICE_WORK_USER_ID = #{record.serviceWorkUserId,jdbcType=INTEGER},
        FIRST_SERVICE_BEGIN_TIME = #{record.firstServiceBeginTime,jdbcType=TIMESTAMP},
        SERVICE_BEGIN_TIME = #{record.serviceBeginTime,jdbcType=TIMESTAMP},
        SERVICE_END_TIME = #{record.serviceEndTime,jdbcType=TIMESTAMP},
        SERVICE_DURATION = #{record.serviceDuration,jdbcType=INTEGER},
        NEXT_SERVICE_ADVISE = #{record.nextServiceAdvise,jdbcType=VARCHAR},
        DISTRIBUTION_ADVISE=#{record.distributionAdvise,jdbcType=VARCHAR},
        ADVISE_MEMO = #{record.adviseMemo,jdbcType=VARCHAR},
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
        TAKE_NUMBER_TYPE = #{record.takeNumberType,jdbcType=VARCHAR},
        DETECTS_SERVICE_TIME = #{record.detectsServiceTime,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkQueue">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_ha_work_queue
        <set>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="cardType != null">
                CARD_TYPE = #{cardType,jdbcType=VARCHAR},
            </if>
            <if test="cardNo != null">
                CARD_NO = #{cardNo,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                PHONE = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null">
                COMPANY_NAME = #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="companyCode != null">
                COMPANY_CODE = #{companyCode,jdbcType=VARCHAR},
            </if>
            <if test="queueStatus != null">
                QUEUE_STATUS = #{queueStatus,jdbcType=VARCHAR},
            </if>
            <if test="distributeStatus != null">
                DISTRIBUTE_STATUS = #{distributeStatus,jdbcType=VARCHAR},
            </if>
            <if test="distributeTime != null">
                DISTRIBUTE_TIME = #{distributeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceStatus != null">
                SERVICE_STATUS = #{serviceStatus,jdbcType=VARCHAR},
            </if>
            <if test="serviceWorkUserId != null">
                SERVICE_WORK_USER_ID = #{serviceWorkUserId,jdbcType=INTEGER},
            </if>
            <if test="serviceBeginTime != null">
                SERVICE_BEGIN_TIME = #{serviceBeginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="firstServiceBeginTime != null">
                FIRST_SERVICE_BEGIN_TIME = #{firstServiceBeginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceEndTime != null">
                SERVICE_END_TIME = #{serviceEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceDuration != null">
                SERVICE_DURATION = #{serviceDuration,jdbcType=INTEGER},
            </if>
            <if test="nextServiceAdvise != null">
                NEXT_SERVICE_ADVISE = #{nextServiceAdvise,jdbcType=VARCHAR},
            </if>
            <if test="distributionAdvise != null">
                DISTRIBUTION_ADVISE = #{distributionAdvise,jdbcType=VARCHAR},
            </if>
            <if test="adviseMemo != null">
                ADVISE_MEMO = #{adviseMemo,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                CREATE_BY = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="agentTakeNumber != null">
                AGENT_TAKE_NUMBER=#{agentTakeNumber,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="takeNumberType != null">
                TAKE_NUMBER_TYPE = #{takeNumberType,jdbcType=VARCHAR},
            </if>
            <if test="detectsServiceTime != null">
                DETECTS_SERVICE_TIME = #{detectsServiceTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkQueue">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_ha_work_queue
        set NAME = #{name,jdbcType=VARCHAR},
        CARD_TYPE = #{cardType,jdbcType=VARCHAR},
        CARD_NO = #{cardNo,jdbcType=VARCHAR},
        PHONE = #{phone,jdbcType=VARCHAR},
        COMPANY_NAME = #{companyName,jdbcType=VARCHAR},
        COMPANY_CODE = #{companyCode,jdbcType=VARCHAR},
        QUEUE_STATUS = #{queueStatus,jdbcType=VARCHAR},
        DISTRIBUTE_STATUS = #{distributeStatus,jdbcType=VARCHAR},
        DISTRIBUTE_TIME = #{distributeTime,jdbcType=TIMESTAMP},
        SERVICE_STATUS = #{serviceStatus,jdbcType=VARCHAR},
        SERVICE_WORK_USER_ID = #{serviceWorkUserId,jdbcType=INTEGER},
        SERVICE_BEGIN_TIME = #{serviceBeginTime,jdbcType=TIMESTAMP},
        FIRST_SERVICE_BEGIN_TIME = #{firstServiceBeginTime,jdbcType=TIMESTAMP},
        SERVICE_END_TIME = #{serviceEndTime,jdbcType=TIMESTAMP},
        SERVICE_DURATION = #{serviceDuration,jdbcType=INTEGER},
        NEXT_SERVICE_ADVISE = #{nextServiceAdvise,jdbcType=VARCHAR},
        DISTRIBUTION_ADVISE = #{distributionAdvise,jdbcType=VARCHAR},
        ADVISE_MEMO = #{adviseMemo,jdbcType=VARCHAR},
        WINDOWS_NUMBER=#{windowsNumber,jdbcType=VARCHAR},
        AGENT_TAKE_NUMBER=#{agentTakeNumber,jdbcType=VARCHAR},
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
        TAKE_NUMBER_TYPE = #{takeNumberType,jdbcType=VARCHAR},
        DETECTS_SERVICE_TIME = #{detectsServiceTime,jdbcType=TIMESTAMP}
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <!--根据DbHaWorkQueueVo查询 办事队列信息list-->
    <select id="queryHaWokQueueByHaQueue" parameterType="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkQueueVo"
            resultMap="BaseResultMap2">
        select
        tq.ID,tq.NAME,tq.CARD_TYPE,tq.CARD_NO,tq.PHONE,tq.COMPANY_NAME,tq.COMPANY_CODE,tq.QUEUE_STATUS,tq.CREATE_DATE,tq.DISTRIBUTE_STATUS,tq.SERVICE_STATUS,
        tq.SERVICE_BEGIN_TIME,tq.FIRST_SERVICE_BEGIN_TIME,tq.SERVICE_END_TIME,tq.SERVICE_DURATION,tq.ADVISE_MEMO,tu.NAME as WORK_USER_NAME,tq.AGENT_TAKE_NUMBER,
        tq.TAKE_NUMBER_TYPE,tq.SERVICE_WORK_USER_ID
        from t_ha_work_queue tq,t_ha_help_work_user tu
        where tu.DELETE_STATUS='1'
        <if test="beginADay != null"><!-- 开始时间检索 -->
            AND tq.CREATE_DATE &gt;= #{beginADay}
        </if>
        <if test="endADay != null "><!-- 结束时间检索 -->
            AND tq.CREATE_DATE &lt;= #{endADay}
        </if>-- 根据当天时间进行筛选
        <if test="serviceWorkUserId != null">
            and tq.SERVICE_WORK_USER_ID=#{serviceWorkUserId}
        </if>
        <if test="name != null and name != ''">
            and tq.NAME like concat('%', #{name}, '%')
        </if>
        <if test="cardType != null and cardType != ''">
            and tq.CARD_TYPE =#{cardType}
        </if>
        <if test="cardNo != null and cardNo != ''">
            and tq.CARD_NO =#{cardNo}
        </if>
        <if test="serviceWorkUserId != null and serviceWorkUserId != ''">
            and tq.SERVICE_WORK_USER_ID =#{serviceWorkUserId}
        </if>
        <if test="companyName != null and companyName != ''">
            and tq.COMPANY_NAME like concat('%', #{companyName}, '%')
        </if>
        <if test="companyCode != null and companyCode != ''">
            and tq.COMPANY_CODE=#{companyCode}
        </if>
        <if test="queueStatus != null and queueStatus != ''">
            and tq.QUEUE_STATUS = #{queueStatus}
        </if>
        <if test="serviceStatus != null and serviceStatus != ''">
            and tq.SERVICE_STATUS = #{serviceStatus}
        </if>
        <if test="takeNumberType != null and takeNumberType != ''">
            and tq.TAKE_NUMBER_TYPE = #{takeNumberType}
        </if>
        and tq.SERVICE_WORK_USER_ID=tu.ID
        order by tq.CREATE_DATE desc
    </select>

    <select id="queueServiceList" parameterType="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkQueueVo"
            resultMap="BaseResultMap3">
        SELECT wq.NAME, wq.COMPANY_NAME,ws.SERVICE_TYPE,ws.PUSH_TYPE , ws.SERVICE_MEMO,ws.SX_SERVICE_ID,
               ss.SERVICE_NAME,ws.QL_CASE_ID,ws.SERVICE_STATUS,ws.CASE_NUMBER,ws.PUSH_DATE
        FROM  t_ha_work_service ws
        left join  t_ha_work_queue wq
        on wq.ID = ws.WORK_QUEUE_ID
        left join  t_sx_service ss
        on ss.SERVICE_OID = ws.SX_SERVICE_ID
        <where>
            <if test="serviceWorkUserId != null and serviceWorkUserId != ''">
                and wq.SERVICE_WORK_USER_ID =#{serviceWorkUserId}
            </if>
            <if test="serviceStatus != null and serviceStatus != ''">
                and wq.SERVICE_STATUS = #{serviceStatus}
            </if>
            <if test="id != null and id != ''">
                and wq.ID = #{id}
            </if>
        </where>
        order by wq.CREATE_DATE desc
    </select>
    <!--查询当前帮办人员下服务状态为待服务并且等待时间最长的一条数据-->
    <select id="queryHaWorkQueueByServiceStatusAndWaitTime" resultMap="queueAndUser">
        select ID,
               NAME,
               CARD_TYPE,
               CARD_NO,
               PHONE,
               COMPANY_NAME,
               COMPANY_CODE,
               QUEUE_STATUS,
               DISTRIBUTE_STATUS,
               SERVICE_STATUS,
               SERVICE_BEGIN_TIME,
               FIRST_SERVICE_BEGIN_TIME,
               CREATE_DATE,
               SERVICE_WORK_USER_ID,
               TAKE_NUMBER_TYPE
        from t_ha_work_queue
        where SERVICE_STATUS = #{serviceStatus,jdbcType=VARCHAR}
            and SERVICE_WORK_USER_ID = #{serviceWorkUserId,jdbcType=INTEGER}
            <if test="beginADay != null"><!-- 开始时间检索 -->
                AND CREATE_DATE &gt;= #{beginADay}
            </if>
            <if test="endADay != null "><!-- 结束时间检索 -->
                AND CREATE_DATE &lt;= #{endADay}
            </if>-- 当天时间
        ORDER BY CREATE_DATE ASC LIMIT 0,1
    </select>
    <!--根据用户IDlist 服务状态 开始时间结束时间 计数-->
    <select id="countWorkQueueByServiceStatusAndWorkUserIds" resultType="java.lang.Integer">
        select count(*) from t_ha_work_queue
        where
        SERVICE_STATUS= #{serviceStatus,jdbcType=VARCHAR}
        <if test="beginADay != null"><!-- 开始时间检索 -->
            AND CREATE_DATE &gt;= #{beginADay}
        </if>
        <if test="endADay != null "><!-- 结束时间检索 -->
            AND CREATE_DATE &lt;= #{endADay}
        </if>-- 当天时间
        and SERVICE_WORK_USER_ID in
        <foreach collection="workUserIdList" index="index" item="serviceWorkUserId" open="(" separator="," close=")">
            #{serviceWorkUserId}
        </foreach>
    </select>
    <!--根据用户IDlist 服务状态 开始时间结束时间 计数今日组内今日已经服务的人数-->
    <select id="countWorkQueueByServiceStatusAndEndTimeAndWorkUserIds" resultType="java.lang.Integer">
        select count(*) from t_ha_work_queue
        where
        SERVICE_STATUS= #{serviceStatus,jdbcType=VARCHAR}
        <if test="beginADay != null"><!-- 开始时间检索 -->
            AND SERVICE_END_TIME &gt;= #{beginADay}
        </if>
        <if test="endADay != null "><!-- 结束时间检索 -->
            AND SERVICE_END_TIME &lt;= #{endADay}
        </if>-- 服务结束时间为当天时间
        and SERVICE_WORK_USER_ID in
        <foreach collection="workUserIdList" index="index" item="serviceWorkUserId" open="(" separator="," close=")">
            #{serviceWorkUserId}
        </foreach>
    </select>

    <!--获取等待服务的人数-->
    <select id="countWaitService"
            resultType="java.lang.Integer">
        select
        COUNT( CASE SERVICE_STATUS WHEN 1 THEN 1 END ) AS SERVICE_STATUS
        FROM
        t_ha_work_queue
        <where>
            <if test="beginADay != null"><!-- 开始时间检索 -->
                AND DISTRIBUTE_TIME &gt;= #{beginADay}
            </if>
            <if test="endADay != null "><!-- 结束时间检索 -->
                AND DISTRIBUTE_TIME &lt;= #{endADay}
            </if>-- 服务结束时间为当天时间
        </where>
    </select>

    <!--获取正在服务的人数-->
    <select id="inServiceNum"
            resultType="java.lang.Integer">
        select
        count(case SERVICE_STATUS when '2' then 1 end ) as inServiceNum -- 正在服务的人数,
        FROM
        t_ha_work_queue
        <where>
            <if test="beginADay != null"><!-- 开始时间检索 -->
                AND DISTRIBUTE_TIME &gt;= #{beginADay}
            </if>
            <if test="endADay != null "><!-- 结束时间检索 -->
                AND DISTRIBUTE_TIME &lt;= #{endADay}
            </if>-- 服务结束时间为当天时间
        </where>
    </select>

    <!--获取累计服务人数-->
    <select id="completeServiceNum"
            resultType="java.lang.Integer">
        select
        count(case SERVICE_STATUS when '3' then 1 end ) as completeServiceNum -- 已完成的服务人数,
        FROM
        t_ha_work_queue
        <where>
            <if test="beginADay != null"><!-- 开始时间检索 -->
                AND DISTRIBUTE_TIME &gt;= #{beginADay}
            </if>
            <if test="endADay != null "><!-- 结束时间检索 -->
                AND DISTRIBUTE_TIME &lt;= #{endADay}
            </if>-- 服务结束时间为当天时间
        </where>
    </select>
    <select id="queryWorkAndQueuByid" parameterType="java.lang.Long" resultMap="BaseResultqueuAndWork">
        SELECT
            q.ID,
            q.SERVICE_WORK_USER_ID,
            q.WINDOWS_NUMBER,
            q.DISTRIBUTE_STATUS,
            q.QUEUE_STATUS,
            q.SERVICE_STATUS,
            u.NAME,
            u.WORK_NUMBER,
            u.AVG_SERVICE_TIME
        FROM
            t_ha_work_queue q
                LEFT JOIN t_ha_help_work_user u ON q.SERVICE_WORK_USER_ID = u.ID
        WHERE
            q.ID = #{id,jdbcType=BIGINT}
    </select>

</mapper>
