<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zfsoft.ha.dbaccess.dao.DbHaWorkTurnRecordMapper">
    <resultMap id="BaseResultMap" type="com.zfsoft.ha.dbaccess.data.DbHaWorkTurnRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="WORK_QUEUE_ID" jdbcType="BIGINT" property="workQueueId"/>
        <result column="SERVICE_WORK_USER_ID" jdbcType="BIGINT" property="serviceWorkUserId"/>
        <result column="OLD_SERVICE_WORK_USER_ID" jdbcType="BIGINT" property="oldServiceWorkUserId"/>
        <!--start 新增字段2022/08/02 update by kangax-->
        <result column="HANDLE_WORK_USER_ID" jdbcType="BIGINT" property="handleWorkUserId"/>
        <result column="VERIFY_WORK_USER_ID" jdbcType="BIGINT" property="verifyWorkUserId"/>

        <result column="TURN_TIME" jdbcType="TIMESTAMP" property="turnTime"/>
        <result column="TURN_STATUS" jdbcType="VARCHAR" property="turnStatus"/>
        <result column="TURN_MEMO" jdbcType="VARCHAR" property="turnMemo"/>
        <result column="HANDLE_TIME" jdbcType="TIMESTAMP" property="handleTime"/>
        <result column="ROLLBACK_MEMO" jdbcType="VARCHAR" property="rollbackMemo"/>
        <!--end-->
        <result column="SERVICE_BEGIN_TIME" jdbcType="TIMESTAMP" property="serviceBeginTime"/>
        <result column="SERVICE_END_TIME" jdbcType="TIMESTAMP" property="serviceEndTime"/>
        <result column="SERVICE_DURATION" jdbcType="INTEGER" property="serviceDuration"/>
        <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy"/>
        <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy"/>
        <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkTurnRecordVo">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="WORK_QUEUE_ID" jdbcType="BIGINT" property="workQueueId"/>
        <result column="SERVICE_WORK_USER_ID" jdbcType="BIGINT" property="serviceWorkUserId"/>
        <result column="OLD_SERVICE_WORK_USER_ID" jdbcType="BIGINT" property="oldServiceWorkUserId"/>
        <!--start 新增字段2022/08/02 update by kangax-->
        <result column="HANDLE_WORK_USER_ID" jdbcType="BIGINT" property="handleWorkUserId"/>
        <result column="VERIFY_WORK_USER_ID" jdbcType="BIGINT" property="verifyWorkUserId"/>
        <result column="TURN_TIME" jdbcType="TIMESTAMP" property="turnTime"/>
        <result column="TURN_STATUS" jdbcType="VARCHAR" property="turnStatus"/>
        <result column="TURN_MEMO" jdbcType="VARCHAR" property="turnMemo"/>
        <result column="HANDLE_TIME" jdbcType="TIMESTAMP" property="handleTime"/>
        <result column="ROLLBACK_MEMO" jdbcType="VARCHAR" property="rollbackMemo"/>
        <!--end-->
        <result column="SERVICE_BEGIN_TIME" jdbcType="TIMESTAMP" property="serviceBeginTime"/>
        <result column="SERVICE_END_TIME" jdbcType="TIMESTAMP" property="serviceEndTime"/>
        <result column="SERVICE_DURATION" jdbcType="INTEGER" property="serviceDuration"/>
        <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy"/>
        <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy"/>
        <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="COMPANY_NAME" jdbcType="VARCHAR" property="companyName"/>
        <result column="COMPANY_CODE" jdbcType="VARCHAR" property="companyCode"/>
        <result column="CARD_NO" jdbcType="VARCHAR" property="cardNo"/>
        <result column="PHONE" jdbcType="VARCHAR" property="phone"/>
        <result column="SERVICE_USER_WORK_NAME" jdbcType="VARCHAR" property="serviceWorkUserName"/>
        <result column="HANDLE_WORK_USER_NAME" jdbcType="VARCHAR" property="handleWorkUserName"/>
        <result column="SERVICE_NAME" jdbcType="VARCHAR" property="serviceName"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        ID, WORK_QUEUE_ID, HANDLE_WORK_USER_ID, SERVICE_WORK_USER_ID, OLD_SERVICE_WORK_USER_ID,VERIFY_WORK_USER_ID, TURN_TIME,
        TURN_STATUS, TURN_MEMO, HANDLE_TIME, ROLLBACK_MEMO, SERVICE_BEGIN_TIME,
        SERVICE_END_TIME, SERVICE_DURATION, CREATE_BY, CREATE_DATE, UPDATE_BY, UPDATE_DATE
    </sql>
    <select id="selectByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaWorkTurnRecordExample"
            resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_ha_work_turn_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from t_ha_work_turn_record
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_ha_work_turn_record
        where ID = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaWorkTurnRecordExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_ha_work_turn_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkTurnRecord" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_ha_work_turn_record (  WORK_QUEUE_ID,HANDLE_WORK_USER_ID, SERVICE_WORK_USER_ID,
        OLD_SERVICE_WORK_USER_ID, VERIFY_WORK_USER_ID,TURN_TIME, TURN_STATUS, TURN_MEMO, HANDLE_TIME, ROLLBACK_MEMO, SERVICE_BEGIN_TIME,
        SERVICE_END_TIME, SERVICE_DURATION, CREATE_BY,
        CREATE_DATE, UPDATE_BY, UPDATE_DATE
        )
        values ( #{workQueueId,jdbcType=BIGINT},#{handleWorkUserId,jdbcType=BIGINT},
        #{serviceWorkUserId,jdbcType=BIGINT},
        #{oldServiceWorkUserId,jdbcType=BIGINT}, #{verifyWorkUserId,jdbcType=BIGINT},#{turnTime,jdbcType=TIMESTAMP}, #{turnStatus,jdbcType=VARCHAR},
        #{turnMemo,jdbcType=VARCHAR},#{handleTime,jdbcType=TIMESTAMP}, #{rollbackMemo,jdbcType=VARCHAR},
        #{serviceBeginTime,jdbcType=TIMESTAMP},
        #{serviceEndTime,jdbcType=TIMESTAMP}, #{serviceDuration,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR},
        #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkTurnRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_ha_work_turn_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="workQueueId != null">
                WORK_QUEUE_ID,
            </if>
            <if test="handleWorkUserId != null">
                HANDLE_WORK_USER_ID,
            </if>
            <if test="serviceWorkUserId != null">
                SERVICE_WORK_USER_ID,
            </if>
            <if test="oldServiceWorkUserId != null">
                OLD_SERVICE_WORK_USER_ID,
            </if>
            <if test="verifyWorkUserId != null">
                VERIFY_WORK_USER_ID,
            </if>
            <if test="serviceBeginTime != null">
                SERVICE_BEGIN_TIME,
            </if>
            <if test="serviceEndTime != null">
                SERVICE_END_TIME,
            </if>
            <if test="serviceDuration != null">
                SERVICE_DURATION,
            </if>
            <if test="createBy != null">
                CREATE_BY,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updateBy != null">
                UPDATE_BY,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="workQueueId != null">
                #{workQueueId,jdbcType=BIGINT},
            </if>
            <if test="handleWorkUserId != null">
                #{handleWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="serviceWorkUserId != null">
                #{serviceWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="oldServiceWorkUserId != null">
                #{oldServiceWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="verifyWorkUserId != null">
                #{verifyWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="serviceBeginTime != null">
                #{serviceBeginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceEndTime != null">
                #{serviceEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceDuration != null">
                #{serviceDuration,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaWorkTurnRecordExample"
            resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from t_ha_work_turn_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_ha_work_turn_record
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.workQueueId != null">
                WORK_QUEUE_ID = #{record.workQueueId,jdbcType=BIGINT},
            </if>
            <if test="record.handleWorkUserId != null">
                HANDLE_WORK_USER_ID = #{handleWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="record.serviceWorkUserId != null">
                SERVICE_WORK_USER_ID = #{record.serviceWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="record.oldServiceWorkUserId != null">
                OLD_SERVICE_WORK_USER_ID = #{record.oldServiceWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="record.verifyWorkUserId != null">
                VERIFY_WORK_USER_ID = #{verifyWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="record.turnStatus != null">
                TURN_STATUS = #{turnStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.handleTime != null">
                HANDLE_TIME = #{handleTime,jdbcType=VARCHAR},
            </if>
            <if test="record.rollbackMemo != null">
                ROLLBACK_MEMO = #{rollbackMemo,jdbcType=VARCHAR},
            </if>
            <if test="record.serviceBeginTime != null">
                SERVICE_BEGIN_TIME = #{record.serviceBeginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.serviceEndTime != null">
                SERVICE_END_TIME = #{record.serviceEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.serviceDuration != null">
                SERVICE_DURATION = #{record.serviceDuration,jdbcType=INTEGER},
            </if>
            <if test="record.createBy != null">
                CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="record.updateDate != null">
                UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_ha_work_turn_record
        set ID = #{record.id,jdbcType=BIGINT},
        WORK_QUEUE_ID = #{record.workQueueId,jdbcType=BIGINT},
        SERVICE_WORK_USER_ID = #{record.serviceWorkUserId,jdbcType=BIGINT},
        OLD_SERVICE_WORK_USER_ID = #{record.oldServiceWorkUserId,jdbcType=BIGINT},
        SERVICE_BEGIN_TIME = #{record.serviceBeginTime,jdbcType=TIMESTAMP},
        SERVICE_END_TIME = #{record.serviceEndTime,jdbcType=TIMESTAMP},
        SERVICE_DURATION = #{record.serviceDuration,jdbcType=INTEGER},
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkTurnRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_ha_work_turn_record
        <set>
            <if test="workQueueId != null">
                WORK_QUEUE_ID = #{workQueueId,jdbcType=BIGINT},
            </if>
            <if test="handleWorkUserId != null">
                HANDLE_WORK_USER_ID = #{handleWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="serviceWorkUserId != null">
                SERVICE_WORK_USER_ID = #{serviceWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="oldServiceWorkUserId != null">
                OLD_SERVICE_WORK_USER_ID = #{oldServiceWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="verifyWorkUserId != null">
                VERIFY_WORK_USER_ID = #{verifyWorkUserId,jdbcType=BIGINT},
            </if>
            <if test="serviceBeginTime != null">
                SERVICE_BEGIN_TIME = #{serviceBeginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceEndTime != null">
                SERVICE_END_TIME = #{serviceEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceDuration != null">
                SERVICE_DURATION = #{serviceDuration,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                CREATE_BY = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="turnStatus != null">
                TURN_STATUS = #{turnStatus,jdbcType=VARCHAR},
            </if>
            <if test="handleTime != null">
                HANDLE_TIME = #{handleTime,jdbcType=VARCHAR},
            </if>
            <if test="rollbackMemo != null">
                ROLLBACK_MEMO = #{rollbackMemo,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkTurnRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_ha_work_turn_record
        set WORK_QUEUE_ID = #{workQueueId,jdbcType=BIGINT},
        HANDLE_WORK_USER_ID = #{handleWorkUserId,jdbcType=BIGINT},
        SERVICE_WORK_USER_ID = #{serviceWorkUserId,jdbcType=BIGINT},
        OLD_SERVICE_WORK_USER_ID = #{oldServiceWorkUserId,jdbcType=BIGINT},
        TURN_TIME = #{turnTime,jdbcType=TIMESTAMP},
        TURN_STATUS = #{turnStatus,jdbcType=VARCHAR},
        TURN_MEMO = #{turnMemo,jdbcType=VARCHAR},
        HANDLE_TIME = #{handleTime,jdbcType=TIMESTAMP},
        ROLLBACK_MEMO = #{rollbackMemo,jdbcType=VARCHAR},
        SERVICE_BEGIN_TIME = #{serviceBeginTime,jdbcType=TIMESTAMP},
        SERVICE_END_TIME = #{serviceEndTime,jdbcType=TIMESTAMP},
        SERVICE_DURATION = #{serviceDuration,jdbcType=INTEGER},
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}
        where ID = #{id,jdbcType=BIGINT}
    </update>

    <select id="queryByBeginTime" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkTurnRecord" resultMap="BaseResultMap">
        select *
        from t_ha_work_turn_record
        where TURN_STATUS='1'
          and SERVICE_WORK_USER_ID= #{workUserId}
          and CREATE_DATE >=#{beginTime}
        order by CREATE_DATE
    </select>

    <select id="queryByVerifyWorkUserIdAndBeginTime" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkTurnRecord" resultMap="BaseResultMap">
        select *
        from t_ha_work_turn_record
        where TURN_STATUS='1'
          and VERIFY_WORK_USER_ID= #{verifyWorkUserId}
          and CREATE_DATE >=#{beginTime}
        order by CREATE_DATE
    </select>

    <select id="queryWorkTurnRecord" resultMap="BaseResultMap2">
        select tr.*,
               wq.COMPANY_NAME,
               wq.NAME,
               wq.CARD_NO,
               wq.PHONE,
               wq.COMPANY_CODE,
               wu.NAME  as SERVICE_USER_WORK_NAME,
               wu2.NAME  as HANDLE_WORK_USER_NAME
        from t_ha_work_turn_record tr
        left join t_ha_work_queue wq
        on tr.WORK_QUEUE_ID = wq.ID
        left join (select ID,NAME from t_ha_help_work_user )wu
        on tr.SERVICE_WORK_USER_ID = wu.ID
        left join (select ID,NAME from t_ha_help_work_user )wu2
        on tr.HANDLE_WORK_USER_ID = wu2.ID
        <where>
            <if test="workUserId != null"><!-- 服务人员 -->
                AND tr.SERVICE_WORK_USER_ID = #{workUserId}
            </if>
            <if test="verifyWorkUserId != null "><!-- 审核人员 -->
                AND tr.VERIFY_WORK_USER_ID = #{verifyWorkUserId}
            </if>
            <if test="name != null "><!-- 办事人姓名 -->
                AND wq.NAME like concat('%',#{name},'%')
            </if>
            <if test="turnStatus != null "><!-- 办事人姓名 -->
                AND tr.TURN_STATUS = #{turnStatus}
            </if>
        </where>
        order by tr.CREATE_DATE
    </select>
    <select id="queryWorkService" resultMap="BaseResultMap2"
            parameterType="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkTurnRecordVo">
        select tr.*,
        wq.COMPANY_NAME,
        wq.NAME,
        wq.CARD_NO,
        wq.PHONE,
        wq.COMPANY_CODE,
        wu.NAME  as SERVICE_USER_WORK_NAME,
        wu2.NAME  as HANDLE_WORK_USER_NAME,
        tr.SERVICE_DURATION

        from  t_ha_work_turn_record tr
        left join t_ha_work_queue wq
        on tr.WORK_QUEUE_ID = wq.ID
        left join (select ID,NAME from t_ha_help_work_user )wu
        on tr.SERVICE_WORK_USER_ID = wu.ID
        left join (select ID,NAME from t_ha_help_work_user )wu2
        on tr.HANDLE_WORK_USER_ID = wu2.ID
        <where>
            <if test="serviceWorkUserId != null"><!-- 服务人员 -->
                AND tr.SERVICE_WORK_USER_ID = #{serviceWorkUserId}
            </if>
            <if test="handleWorkUserId != null"><!-- 转派发起人 -->
                AND tr.HANDLE_WORK_USER_ID = #{handleWorkUserId}
            </if>
            <if test="verifyWorkUserId != null "><!-- 审核人员 -->
                AND tr.VERIFY_WORK_USER_ID = #{verifyWorkUserId}
            </if>
            <if test="turnStatus != null ">
                AND tr.TURN_STATUS = #{turnStatus}
            </if>
            <if test="name != null and name!='' "><!-- 办事人姓名 -->
                AND wq.NAME like concat('%',#{name},'%')
            </if>
            <if test="phone != null and phone!='' "><!-- 办事人姓名 -->
                AND wq.PHONE  = #{phone}
            </if>
            <if test="beginADay != null"><!-- 开始时间检索 -->
                AND tr.TURN_TIME &gt;= #{beginADay}
            </if>
            <if test="endADay != null "><!-- 结束时间检索 -->
                AND tr.TURN_TIME &lt;= #{endADay}
            </if>
        </where>
        order by tr.CREATE_DATE desc
    </select>

    <!--根据用户id,队列ID查询办事转派记录-->
    <select id="queryByQueueIdAndWorkUserId" resultMap="BaseResultMap">
        select * from t_ha_work_turn_record
        <where>
            SERVICE_WORK_USER_ID= #{workUserId}
            and WORK_QUEUE_ID= #{workQueueId}
            <if test="beginADay != null"><!-- 开始时间检索 -->
                AND CREATE_DATE &gt;= #{beginADay}
            </if>
            <if test="endADay != null "><!-- 结束时间检索 -->
                AND CREATE_DATE &lt;= #{endADay}
            </if>
        </where>
        order by CREATE_DATE
    </select>
    <!--根据用户id,队列ID查询办事转派记录-->
    <select id="queryByQueueIdAndVerifyWorkUserId" resultMap="BaseResultMap">
        select * from t_ha_work_turn_record
        <where>
            VERIFY_WORK_USER_ID= #{verifyWorkUserId}
            and WORK_QUEUE_ID= #{workQueueId}
            <if test="beginADay != null"><!-- 开始时间检索 -->
                AND CREATE_DATE &gt;= #{beginADay}
            </if>
            <if test="endADay != null "><!-- 结束时间检索 -->
                AND CREATE_DATE &lt;= #{endADay}
            </if>
        </where>
        order by CREATE_DATE
    </select>
    <!--根据idlist批量更新办事转派记录服务结束时间-->
    <update id="updateByIds" >
        update t_ha_work_turn_record
        set SERVICE_END_TIME = #{nowDate,jdbcType=TIMESTAMP},
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
        UPDATE_DATE = #{nowDate,jdbcType=TIMESTAMP},
        SERVICE_DURATION = #{duration,jdbcType=INTEGER}
        where ID in
        <foreach collection="turnRecordIds" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>