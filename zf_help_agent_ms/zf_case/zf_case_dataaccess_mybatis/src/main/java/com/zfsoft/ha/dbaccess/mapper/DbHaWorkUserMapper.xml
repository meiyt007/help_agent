<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zfsoft.ha.dbaccess.dao.DbHaWorkUserMapper">
    <resultMap id="BaseResultMap" type="com.zfsoft.ha.dbaccess.data.DbHaWorkUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="ID" jdbcType="BIGINT" property="id"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="ACCOUNT" jdbcType="VARCHAR" property="account"/>
        <result column="USER_TYPE" jdbcType="VARCHAR" property="userType"/>
        <result column="HA_TYPE" jdbcType="VARCHAR" property="haType"/>
        <result column="PHONE" jdbcType="VARCHAR" property="phone"/>
        <result column="EMAIL" jdbcType="VARCHAR" property="email"/>
        <result column="STATUS" jdbcType="VARCHAR" property="status"/>
        <result column="DISTRICT_OID" jdbcType="VARCHAR" property="districtOid"/>
        <result column="IMAGE" jdbcType="VARCHAR" property="image"/>
        <result column="SALT" jdbcType="VARCHAR" property="salt"/>
        <result column="PASSWORD" jdbcType="VARCHAR" property="password"/>
        <result column="MEMO" jdbcType="VARCHAR" property="memo"/>
        <result column="DELETE_STATUS" jdbcType="VARCHAR" property="deleteStatus"/>
        <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy"/>
        <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy"/>
        <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="APPON_STATUS" jdbcType="VARCHAR" property="apponStatus"/>
        <!--20221109新加字段-->
        <result column="TAKE_NUM_STATUS" jdbcType="VARCHAR" property="takeNumStatus"/>
        <!--新加字段-->
        <result column="AVG_SERVICE_TIME" jdbcType="INTEGER" property="avgServiceTime"/>
        <result column="MAX_SERVICE_NUM" jdbcType="INTEGER" property="maxServiceNum"/>
        <result column="CURRENT_SERVICE_NUM" jdbcType="INTEGER" property="currentServiceNum"/>
        <!--新加字段-->
        <result column="CONNECT_USER_ID" jdbcType="VARCHAR" property="connectUserId"/>
        <result column="WORK_NUMBER" jdbcType="VARCHAR" property="workNumber"/>
        <result column="SERVICE_POSTION" jdbcType="VARCHAR" property="servicePostion"/>
        <result column="GROUP_ID" jdbcType="INTEGER" property="groupId"/>
        <result column="GROUP_POST" jdbcType="VARCHAR" property="groupPost"/>
        <result column="TURN_CONFIG" jdbcType="VARCHAR" property="turnConfig"/>
        <!--20230307新增-->
        <result column="GROUP_SPLIT_ID" jdbcType="VARCHAR" property="groupSplitId"/>
        <!--20230309新增-->
        <result column="LOGIN_LOCATION_NAME" jdbcType="VARCHAR" property="loginLocationName"/>
        <!--20230317新增-->
        <result column="EVAL_STATUS" jdbcType="VARCHAR" property="evalStatus"/>
        <result column="RESOURCE_STATUS" jdbcType="VARCHAR" property="resourceStatus"/>
        <result column="QUESTION_STATUS" jdbcType="VARCHAR" property="questionStatus"/>
        <result column="QA_STATUS" jdbcType="VARCHAR" property="qaStatus"/>
        <!--20230323新增-->
        <result column="CLOUD_SERVICE_NUMBER" jdbcType="VARCHAR" property="cloudServiceNumber"/>
        <result column="CALL_TIMEOUT" jdbcType="INTEGER" property="callTimeout"/>
        <!--202304111944新增-->
        <result column="NINE_ZW_WINDOW_SHIELD_STATUS" jdbcType="VARCHAR" property="nineZwWindowShieldStatus"/>
        <result column="TEN_YS_FW_SHIELD_STATUS" jdbcType="VARCHAR" property="tenYsFwShieldStatus"/>
    </resultMap>
    <resultMap id="BaseResultMap1" type="com.zfsoft.ha.dbaccess.data.DbHaWorkUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="ID" jdbcType="BIGINT" property="id"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="WORK_NUMBER" jdbcType="VARCHAR" property="workNumber"/>
        <result column="IMAGE" jdbcType="VARCHAR" property="image"/>
        <result column="MEMO" jdbcType="VARCHAR" property="memo"/>
        <result column="GROUP_ID" jdbcType="INTEGER" property="groupId"/>
        <result column="STATUS" jdbcType="VARCHAR" property="status"/>
        <result column="HA_TYPE" jdbcType="VARCHAR" property="haType"/>
        <result column="CURRENT_SERVICE_NUM" jdbcType="INTEGER" property="currentServiceNum"/>
        <result column="MAX_SERVICE_NUM" jdbcType="INTEGER" property="maxServiceNum"/>
        <result column="AVG_SERVICE_TIME" jdbcType="INTEGER" property="avgServiceTime"/>
        <result column="TAKE_NUMBER_TYPE" jdbcType="VARCHAR" property="takeNumberType"/>
    </resultMap>
    <resultMap id="UserAndGroup" type="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkUserVo">
        <result column="ID" jdbcType="BIGINT" property="id"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="ACCOUNT" jdbcType="VARCHAR" property="account"/>
        <result column="USER_TYPE" jdbcType="VARCHAR" property="userType"/>
        <result column="HA_TYPE" jdbcType="VARCHAR" property="haType"/>
        <result column="PHONE" jdbcType="VARCHAR" property="phone"/>
        <result column="EMAIL" jdbcType="VARCHAR" property="email"/>
        <result column="STATUS" jdbcType="VARCHAR" property="status"/>
        <result column="DISTRICT_OID" jdbcType="VARCHAR" property="districtOid"/>
        <result column="IMAGE" jdbcType="VARCHAR" property="image"/>
        <result column="SALT" jdbcType="VARCHAR" property="salt"/>
        <result column="PASSWORD" jdbcType="VARCHAR" property="password"/>
        <result column="MEMO" jdbcType="VARCHAR" property="memo"/>
        <result column="DELETE_STATUS" jdbcType="VARCHAR" property="deleteStatus"/>
        <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy"/>
        <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy"/>
        <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="APPON_STATUS" jdbcType="VARCHAR" property="apponStatus"/>
        <result column="TAKE_NUM_STATUS" jdbcType="VARCHAR" property="takeNumStatus"/>
        <!--新加字段-->
        <result column="AVG_SERVICE_TIME" jdbcType="INTEGER" property="avgServiceTime"/>
        <result column="MAX_SERVICE_NUM" jdbcType="INTEGER" property="maxServiceNum"/>
        <result column="CURRENT_SERVICE_NUM" jdbcType="INTEGER" property="currentServiceNum"/>
        <!--新加字段-->
        <result column="CONNECT_USER_ID" jdbcType="VARCHAR" property="connectUserId"/>
        <result column="WORK_NUMBER" jdbcType="VARCHAR" property="workNumber"/>
        <result column="SERVICE_POSTION" jdbcType="VARCHAR" property="servicePostion"/>
        <result column="GROUP_ID" jdbcType="INTEGER" property="groupId"/>
        <result column="GROUP_POST" jdbcType="VARCHAR" property="groupPost"/>
        <result column="TURN_CONFIG" jdbcType="VARCHAR" property="turnConfig"/>
        <result column="GROUP_NAME" jdbcType="VARCHAR" property="groupName"/>
        <!--20230307新增-->
        <result column="GROUP_SPLIT_ID" jdbcType="VARCHAR" property="groupSplitId"/>
        <result column="GROUP_SPLIT_NAME" jdbcType="VARCHAR" property="groupSplitName"/>
        <!--20230309新增-->
        <result column="LOGIN_LOCATION_NAME" jdbcType="VARCHAR" property="loginLocationName"/>

        <!--20230317新增-->
        <result column="EVAL_STATUS" jdbcType="VARCHAR" property="evalStatus"/>
        <result column="RESOURCE_STATUS" jdbcType="VARCHAR" property="resourceStatus"/>
        <result column="QUESTION_STATUS" jdbcType="VARCHAR" property="questionStatus"/>
        <result column="QA_STATUS" jdbcType="VARCHAR" property="qaStatus"/>

        <!--20230323新增-->
        <result column="CLOUD_SERVICE_NUMBER" jdbcType="VARCHAR" property="cloudServiceNumber"/>
        <result column="CALL_TIMEOUT" jdbcType="INTEGER" property="callTimeout"/>
    </resultMap>

    <!--查询状态为除了1.离线，服务人数最小的帮办人员集合,扫码填写帮代办信息接口-->
    <select id="getMinMaxServiceNumSM" resultMap="BaseResultMap">
        select ID,
        MAX_SERVICE_NUM,
        STATUS
        from t_ha_help_work_user
        <where>
            STATUS in ('2', '3', '4')
            <if test="groupId != null">
                and GROUP_ID=#{groupId}
            </if>
            <if test="haType != null">
                and HA_TYPE=#{haType}
            </if>
        </where>
        group by ID
    </select>
    <!--查询状态为除了1.离线，服务人数最小的帮办人员集合-->
    <select id="getMinMaxServiceNum" resultMap="BaseResultMap">
        select ID,
               MAX_SERVICE_NUM,
               STATUS
        from t_ha_help_work_user
        where STATUS in ('2', '3', '4')
--       and MAX_SERVICE_NUM = ( select MIN( MAX_SERVICE_NUM ) from t_ha_help_work_user where STATUS in('2','3','4'));
        group by ID
    </select>
    <!--查询状态为除了1.离线，服务人数最小的帮办人员集合-->
    <select id="getMinMaxServiceNumByHaType" resultMap="BaseResultMap">
        select
        ID,
        MAX_SERVICE_NUM ,
        STATUS
        from
        t_ha_help_work_user
        where
        STATUS in ('2','3','4')
        <if test="haType != null">
            and HA_TYPE = #{haType}
        </if>
        -- and MAX_SERVICE_NUM = ( select MIN( MAX_SERVICE_NUM ) from t_ha_help_work_user where STATUS in('2','3','4'));
        group by ID
    </select>

    <!--通过主键修改数据,也可以达到删除效果-->
    <update id="update" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkUser">
        update t_ha_help_work_user
        <set>
            <if test="name != null">
                NAME = #{name},
            </if>
            <if test="account != null">
                ACCOUNT = #{account},
            </if>
            <if test="userType != null">
                USER_TYPE = #{userType},
            </if>
            <if test="haType != null">
                HA_TYPE = #{haType},
            </if>
            <if test="phone != null">
                PHONE = #{phone},
            </if>
            <if test="email != null">
                EMAIL = #{email},
            </if>
            <if test="status != null">
                STATUS = #{status},
            </if>
            <if test="districtOid != null">
                DISTRICT_OID = #{districtOid},
            </if>
            <if test="image != null">
                IMAGE = #{image},
            </if>
            <if test="salt != null">
                SALT = #{salt},
            </if>
            <if test="password != null">
                PASSWORD = #{password},
            </if>
            <if test="memo != null">
                MEMO = #{memo},
            </if>
            <if test="currentServiceNum != null">
                CURRENT_SERVICE_NUM = #{currentServiceNum},
            </if>
            <if test="maxServiceNum != null">
                MAX_SERVICE_NUM = #{maxServiceNum},
            </if>
            <if test="avgServiceTime != null">
                AVG_SERVICE_TIME = #{avgServiceTime},
            </if>
            <if test="deleteStatus != null">
                DELETE_STATUS = #{deleteStatus},
            </if>
            <if test="createBy != null">
                CREATE_BY = #{createBy},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate},
            </if>
            <if test="updateBy != null">
                UPDATE_BY = #{updateBy},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate},
            </if>
            <if test="connectUserId != null and connectUserId !=''">
                CONNECT_USER_ID = #{connectUserId},
            </if>
            <if test="workNumber != null and workNumber != ''">
                WORK_NUMBER = #{workNumber},
            </if>
            <if test="servicePostion != null and servicePostion != ''">
                SERVICE_POSTION = #{servicePostion},
            </if>
            <if test="groupId != null">
                GROUP_ID = #{groupId},
            </if>
            <if test="groupSplitId != null">
                GROUP_SPLIT_ID = #{groupSplitId},
            </if>
            <if test="groupPost != null and groupPost != ''">
                GROUP_POST = #{groupPost},
            </if>
            <if test="turnConfig != null and turnConfig !=''">
                TURN_CONFIG = #{turnConfig},
            </if>
            <if test="apponStatus != null and apponStatus !=''">
                APPON_STATUS = #{apponStatus},
            </if>
            <if test="takeNumStatus != null and takeNumStatus !=''">
                TAKE_NUM_STATUS = #{takeNumStatus},
            </if>
            <if test="loginLocationName != null and loginLocationName !=''">
                LOGIN_LOCATION_NAME = #{loginLocationName},
            </if>
            <if test="evalStatus != null and evalStatus !=''">
                EVAL_STATUS = #{evalStatus},
            </if>
            <if test="resourceStatus != null and resourceStatus !=''">
                RESOURCE_STATUS = #{resourceStatus},
            </if>
            <if test="questionStatus != null and questionStatus !=''">
                QUESTION_STATUS = #{questionStatus},
            </if>
            <if test="qaStatus != null and qaStatus !=''">
                QA_STATUS = #{qaStatus},
            </if>
            <if test="cloudServiceNumber != null and cloudServiceNumber !=''">
                CLOUD_SERVICE_NUMBER = #{cloudServiceNumber},
            </if>
            <if test="callTimeout != null">
                CALL_TIMEOUT = #{callTimeout},
            </if>
            <if test="nineZwWindowShieldStatus != null and nineZwWindowShieldStatus !=''">
                NINE_ZW_WINDOW_SHIELD_STATUS = #{nineZwWindowShieldStatus},
            </if>
            <if test="tenYsFwShieldStatus != null and tenYsFwShieldStatus !=''">
                TEN_YS_FW_SHIELD_STATUS = #{tenYsFwShieldStatus},
            </if>
        </set>
        where ID = #{id}
    </update>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->

        ID, NAME, ACCOUNT, USER_TYPE, HA_TYPE, PHONE, EMAIL, STATUS,
        DISTRICT_OID, IMAGE, SALT, PASSWORD, MEMO, AVG_SERVICE_TIME,
        MAX_SERVICE_NUM, CURRENT_SERVICE_NUM, DELETE_STATUS,
        CREATE_BY, CREATE_DATE, UPDATE_BY, UPDATE_DATE, CONNECT_USER_ID, GROUP_ID, GROUP_POST,
        WORK_NUMBER, SERVICE_POSTION, TURN_CONFIG, APPON_STATUS, TAKE_NUM_STATUS, GROUP_SPLIT_ID, LOGIN_LOCATION_NAME,
        EVAL_STATUS, RESOURCE_STATUS, QUESTION_STATUS, QA_STATUS, CLOUD_SERVICE_NUMBER, CALL_TIMEOUT ,NINE_ZW_WINDOW_SHIELD_STATUS,TEN_YS_FW_SHIELD_STATUS
    </sql>
    <select id="selectByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaWorkUserExample"
            resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_ha_help_work_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_ha_help_work_user
        where ID = #{id}
        and DELETE_STATUS = '1' -- 1-未删除，2-已删除
    </select>
    <delete id="deleteByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaWorkUserExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_ha_help_work_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_ha_help_work_user (NAME, ACCOUNT,
        USER_TYPE, HA_TYPE, PHONE,
        EMAIL, STATUS, DISTRICT_OID,
        IMAGE, SALT, PASSWORD,
        MEMO,AVG_SERVICE_TIME,MAX_SERVICE_NUM,
        CURRENT_SERVICE_NUM, DELETE_STATUS, CREATE_BY,
        CREATE_DATE, UPDATE_BY, UPDATE_DATE,
        CONNECT_USER_ID,WORK_NUMBER,SERVICE_POSTION,
        GROUP_ID,GROUP_POST,TURN_CONFIG,
        APPON_STATUS,TAKE_NUM_STATUS,GROUP_SPLIT_ID, LOGIN_LOCATION_NAME,
        EVAL_STATUS, RESOURCE_STATUS, QUESTION_STATUS, QA_STATUS,
        CLOUD_SERVICE_NUMBER, CALL_TIMEOUT,NINE_ZW_WINDOW_SHIELD_STATUS,TEN_YS_FW_SHIELD_STATUS)
        values (#{name,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR},
        #{userType,jdbcType=VARCHAR}, #{haType,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{districtOid,jdbcType=VARCHAR},
        #{image,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{memo,jdbcType=VARCHAR},#{avgServiceTime,jdbcType=INTEGER},#{maxServiceNum,jdbcType=INTEGER},
        #{currentServiceNum,jdbcType=INTEGER}, #{deleteStatus,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR},
        #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP},
        #{connectUserId,jdbcType=VARCHAR}, #{workNumber,jdbcType=VARCHAR}, #{servicePostion,jdbcType=VARCHAR},
        #{groupId,jdbcType=INTEGER}, #{groupPost,jdbcType=VARCHAR}, #{turnConfig,jdbcType=VARCHAR},
        #{apponStatus,jdbcType=VARCHAR},#{takeNumStatus,jdbcType=VARCHAR},#{groupSplitId,jdbcType=VARCHAR},#{loginLocationName,jdbcType=VARCHAR},
        #{evalStatus,jdbcType=VARCHAR},#{resourceStatus,jdbcType=VARCHAR},#{questionStatus,jdbcType=VARCHAR},#{qaStatus,jdbcType=VARCHAR},
        #{cloudServiceNumber,jdbcType=VARCHAR}, #{callTimeout,jdbcType=INTEGER},#{nineZwWindowShieldStatus,jdbcType=VARCHAR},#{tenYsFwShieldStatus,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.zfsoft.ha.dbaccess.data.DbHaWorkUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_ha_help_work_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <!--      <if test="id != null">-->
            <!--        ID,-->
            <!--      </if>-->
            <if test="name != null">
                NAME,
            </if>
            <if test="account != null">
                ACCOUNT,
            </if>
            <if test="userType != null">
                USER_TYPE,
            </if>
            <if test="haType != null">
                HA_TYPE,
            </if>
            <if test="phone != null">
                PHONE,
            </if>
            <if test="email != null">
                EMAIL,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="districtOid != null">
                DISTRICT_OID,
            </if>
            <if test="image != null">
                IMAGE,
            </if>
            <if test="salt != null">
                SALT,
            </if>
            <if test="password != null">
                PASSWORD,
            </if>
            <if test="memo != null">
                MEMO,
            </if>
            <if test="deleteStatus != null">
                DELETE_STATUS,
            </if>
            <if test="createBy != null">
                CREATE_BY,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updateBy != null">
                UPDATE_BY,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
            <if test="avgServiceTime != null">
                AVG_SERVICE_TIME,
            </if>
            <if test="maxServiceNum != null">
                MAX_SERVICE_NUM,
            </if>
            <if test="currentServiceNum != null">
                CURRENT_SERVICE_NUM,
            </if>
            <if test="connectUserId != null">
                CONNECT_USER_ID,
            </if>
            <if test="workNumber != null">
                WORK_NUMBER,
            </if>
            <if test="servicePostion != null">
                SERVICE_POSTION,
            </if>
            <if test="groupId != null">
                GROUP_ID,
            </if>
            <if test="groupSplitId != null">
                GROUP_SPLIT_ID,
            </if>
            <if test="groupPost != null">
                GROUP_POST,
            </if>
            <if test="turnConfig != null">
                TURN_CONFIG,
            </if>
            <if test="apponStatus != null and apponStatus !=''">
                APPON_STATUS,
            </if>
            <if test="takeNumStatus != null and takeNumStatus !=''">
                TAKE_NUM_STATUS,
            </if>
            <if test="loginLocationName != null and loginLocationName !=''">
                LOGIN_LOCATION_NAME,
            </if>
            <if test="evalStatus != null and evalStatus !=''">
                EVAL_STATUS,
            </if>
            <if test="resourceStatus != null and resourceStatus !=''">
                RESOURCE_STATUS,
            </if>
            <if test="questionStatus != null and questionStatus !=''">
                QUESTION_STATUS,
            </if>
            <if test="qaStatus != null and qaStatus !=''">
                QA_STATUS,
            </if>
            <if test="cloudServiceNumber != null and cloudServiceNumber !=''">
                CLOUD_SERVICE_NUMBER,
            </if>
            <if test="callTimeout != null">
                CALL_TIMEOUT,
            </if>
            <if test="nineZwWindowShieldStatus != null">
                NINE_ZW_WINDOW_SHIELD_STATUS,
            </if>
            <if test="tenYsFwShieldStatus != null">
                TEN_YS_FW_SHIELD_STATUS,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <!--      <if test="id != null">-->
            <!--        #{id,jdbcType=BIGINT},-->
            <!--      </if>-->
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=VARCHAR},
            </if>
            <if test="haType != null">
                #{haType,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="districtOid != null">
                #{districtOid,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="memo != null">
                #{memo,jdbcType=VARCHAR},
            </if>
            <if test="deleteStatus != null">
                #{deleteStatus,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="avgServiceTime != null">
                #{avgServiceTime,jdbcType=INTEGER},
            </if>
            <if test="maxServiceNum != null">
                #{record.maxServiceNum,jdbcType=INTEGER},
            </if>
            <if test="currentServiceNum != null">
                #{currentServiceNum,jdbcType=INTEGER},
            </if>

            <if test="connectUserId != null">
                #{connectUserId,jdbcType=VARCHAR},
            </if>
            <if test="workNumber != null">
                #{workNumber,jdbcType=VARCHAR},
            </if>
            <if test="servicePostion != null">
                #{servicePostion,jdbcType=VARCHAR},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=INTEGER},
            </if>
            <if test="groupSplitId != null">
                #{groupSplitId,jdbcType=VARCHAR},
            </if>
            <if test="groupPost != null">
                #{groupPost,jdbcType=VARCHAR},
            </if>
            <if test="turnConfig != null">
                #{turnConfig,jdbcType=VARCHAR},
            </if>
            <if test="apponStatus != null and apponStatus !=''">
                #{apponStatus,jdbcType=VARCHAR},
            </if>
            <if test="takeNumStatus != null and takeNumStatus !=''">
                #{takeNumStatus,jdbcType=VARCHAR},
            </if>
            <if test="loginLocationName != null and loginLocationName !=''">
                #{loginLocationName},
            </if>

            <if test="evalStatus != null and evalStatus !=''">
                #{evalStatus},
            </if>
            <if test="resourceStatus != null and resourceStatus !=''">
                #{resourceStatus},
            </if>
            <if test="questionStatus != null and questionStatus !=''">
                #{questionStatus},
            </if>
            <if test="qaStatus != null and qaStatus !=''">
                #{qaStatus},
            </if>
            <if test="cloudServiceNumber != null and cloudServiceNumber !=''">
                #{cloudServiceNumber},
            </if>
            <if test="callTimeout != null">
                #{callTimeout},
            </if>
            <if test="nineZwWindowShieldStatus != null and nineZwWindowShieldStatus !=''">
                #{nineZwWindowShieldStatus},
            </if>
            <if test="tenYsFwShieldStatus != null and tenYsFwShieldStatus !=''">
                #{tenYsFwShieldStatus},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zfsoft.ha.dbaccess.data.example.DbHaWorkUserExample"
            resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from t_ha_help_work_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_ha_help_work_user
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                NAME = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.account != null">
                ACCOUNT = #{record.account,jdbcType=VARCHAR},
            </if>
            <if test="record.userType != null">
                USER_TYPE = #{record.userType,jdbcType=VARCHAR},
            </if>
            <if test="record.haType != null">
                HA_TYPE = #{record.haType,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                PHONE = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                EMAIL = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                STATUS = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.districtOid != null">
                DISTRICT_OID = #{record.districtOid,jdbcType=VARCHAR},
            </if>
            <if test="record.image != null">
                IMAGE = #{record.image,jdbcType=VARCHAR},
            </if>
            <if test="record.salt != null">
                SALT = #{record.salt,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                PASSWORD = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.memo != null">
                MEMO = #{record.memo,jdbcType=VARCHAR},
            </if>
            <if test="record.deleteStatus != null">
                DELETE_STATUS = #{record.deleteStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.createBy != null">
                CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="record.updateDate != null">
                UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.avgServiceTime != null">
                AVG_SERVICE_TIME = #{record.avgServiceTime,jdbcType=INTEGER},
            </if>
            <if test="record.maxServiceNum != null">
                MAX_SERVICE_NUM = #{record.maxServiceNum,jdbcType=INTEGER},
            </if>
            <if test="record.currentServiceNum != null">
                CURRENT_SERVICE_NUM = #{record.currentServiceNum,jdbcType=INTEGER}
            </if>

            <if test="record.connectUserId != null">
                CONNECT_USER_ID = #{connectUserId,jdbcType=VARCHAR},
            </if>
            <if test="record.workNumber != null ">
                WORK_NUMBER = #{workNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.servicePostion != null">
                SERVICE_POSTION = #{servicePostion,jdbcType=VARCHAR},
            </if>
            <if test="record.groupId != null">
                GROUP_ID = #{groupId,jdbcType=INTEGER},
            </if>
            <if test="record.groupSplitId != null">
                GROUP_SPLIT_ID = #{groupSplitId,jdbcType=VARCHAR},
            </if>
            <if test="record.groupPost != null ">
                GROUP_POST = #{groupPost,jdbcType=VARCHAR},
            </if>
            <if test="record.turnConfig != null ">
                TURN_CONFIG = #{turnConfig,jdbcType=VARCHAR},
            </if>

            <if test="record.apponStatus != null ">
                APPON_STATUS = #{apponStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.takeNumStatus != null">
                TAKE_NUM_STATUS = #{takeNumStatus,jdbcType=VARCHAR},
            </if>
            <if test="loginLocationName != null and loginLocationName !=''">
                LOGIN_LOCATION_NAME = #{loginLocationName,jdbcType=VARCHAR},
            </if>
            <if test="evalStatus != null and evalStatus !=''">
                EVAL_STATUS = #{evalStatus,jdbcType=VARCHAR},
            </if>
            <if test="resourceStatus != null and resourceStatus !=''">
                RESOURCE_STATUS = #{resourceStatus,jdbcType=VARCHAR},
            </if>
            <if test="questionStatus != null and questionStatus !=''">
                QUESTION_STATUS = #{questionStatus,jdbcType=VARCHAR},
            </if>
            <if test="qaStatus != null and qaStatus !=''">
                QA_STATUS = #{qaStatus,jdbcType=VARCHAR},
            </if>
            <if test="cloudServiceNumber != null and cloudServiceNumber !=''">
                CLOUD_SERVICE_NUMBER = #{cloudServiceNumber,jdbcType=VARCHAR},
            </if>
            <if test="callTimeout != null">
                CALL_TIMEOUT = #{callTimeout,jdbcType=INTEGER},
            </if>
            <if test="nineZwWindowShieldStatus != null and nineZwWindowShieldStatus !=''">
                NINE_ZW_WINDOW_SHIELD_STATUS = #{nineZwWindowShieldStatus,jdbcType=VARCHAR},
            </if>
            <if test="tenYsFwShieldStatus != null and tenYsFwShieldStatus !=''">
                TEN_YS_FW_SHIELD_STATUS = #{tenYsFwShieldStatus,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_ha_help_work_user
        set ID = #{record.id,jdbcType=BIGINT},
        NAME = #{record.name,jdbcType=VARCHAR},
        ACCOUNT = #{record.account,jdbcType=VARCHAR},
        USER_TYPE = #{record.userType,jdbcType=VARCHAR},
        HA_TYPE = #{record.haType,jdbcType=VARCHAR},
        PHONE = #{record.phone,jdbcType=VARCHAR},
        EMAIL = #{record.email,jdbcType=VARCHAR},
        STATUS = #{record.status,jdbcType=VARCHAR},
        DISTRICT_OID = #{record.districtOid,jdbcType=VARCHAR},
        IMAGE = #{record.image,jdbcType=VARCHAR},
        SALT = #{record.salt,jdbcType=VARCHAR},
        PASSWORD = #{record.password,jdbcType=VARCHAR},
        MEMO = #{record.memo,jdbcType=VARCHAR},
        DELETE_STATUS = #{record.deleteStatus,jdbcType=VARCHAR},
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
        AVG_SERVICE_TIME = #{record.avgServiceTime,jdbcType=INTEGER},
        MAX_SERVICE_NUM = #{record.maxServiceNum,jdbcType=INTEGER},
        CURRENT_SERVICE_NUM = #{record.currentServiceNum,jdbcType=INTEGER},

        CONNECT_USER_ID = #{record.connectUserId,jdbcType=VARCHAR},
        WORK_NUMBER = #{record.workNumber,jdbcType=VARCHAR},
        SERVICE_POSTION = #{record.servicePostion,jdbcType=VARCHAR},
        GROUP_ID = #{record.groupId,jdbcType=INTEGER},
        GROUP_POST = #{record.groupPost,jdbcType=VARCHAR},
        TURN_CONFIG = #{record.turnConfig,jdbcType=VARCHAR},
        APPON_STATUS = #{record.apponStatus,jdbcType=VARCHAR},
        TAKE_NUM_STATUS = #{record.takeNumStatus,jdbcType=VARCHAR},
        GROUP_SPLIT_ID = #{record.groupSplitId,jdbcType=VARCHAR},
        LOGIN_LOCATION_NAME = #{record.loginLocationName,jdbcType=INTEGER},
        EVAL_STATUS = #{record.evalStatus,jdbcType=VARCHAR},
        RESOURCE_STATUS = #{record.resourceStatus,jdbcType=VARCHAR},
        QUESTION_STATUS = #{record.questionStatus,jdbcType=VARCHAR},
        QA_STATUS = #{record.qaStatus,jdbcType=VARCHAR},
        CLOUD_SERVICE_NUMBER = #{cloudServiceNumber,jdbcType=VARCHAR},
        CALL_TIMEOUT = #{callTimeout,jdbcType=INTEGER},
        NINE_ZW_WINDOW_SHIELD_STATUS =#{nineZwWindowShieldStatus,jdbcType=VARCHAR},
        TEN_YS_FW_SHIELD_STATUS =#{tenYsFwShieldStatus,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <!--根据帮办人员姓名（模糊） 和小组id查询所有帮办人-->
    <select id="queryNameAndGroup" resultMap="UserAndGroup">
        select a.ID,
        a.NAME,
        a.WORK_NUMBER,
        a.GROUP_ID,
        b.`NAME` as GROUP_NAME
        from t_ha_help_work_user a
        left join
        t_ha_work_user_group b
        on a.GROUP_ID = b.ID
        where
        a.DELETE_STATUS = '1'
        <if test="groupId != null">
            AND a.GROUP_ID = #{groupId}
        </if>
        <if test="workUserName != null and workUserName != ''">
            AND a.NAME like concat('%',#{workUserName},'%')
        </if>

    </select>

    <select id="queryloginByAccountAndId" resultMap="UserAndGroup">
        select a.ID,
        a.NAME,
        a.ACCOUNT,
        a.USER_TYPE,
        a.HA_TYPE,
        a.PHONE,
        a.EMAIL,
        a.STATUS,
        a.DISTRICT_OID,
        a.IMAGE,
        a.SALT,
        a.PASSWORD,
        a.MEMO,
        a.DELETE_STATUS,
        a.CREATE_BY,
        a.CREATE_DATE,
        a.UPDATE_BY,
        a.UPDATE_DATE,
        a.AVG_SERVICE_TIME,
        a.MAX_SERVICE_NUM,
        a.CURRENT_SERVICE_NUM,
        a.CONNECT_USER_ID,
        a.WORK_NUMBER,
        a.SERVICE_POSTION,
        a.GROUP_ID,
        a.GROUP_POST,
        a.TURN_CONFIG,
        a.APPON_STATUS,
        a.TAKE_NUM_STATUS,
        a.GROUP_SPLIT_ID,
        a.LOGIN_LOCATION_NAME,
        a.EVAL_STATUS,
        a.RESOURCE_STATUS,
        a.QUESTION_STATUS,
        a.QA_STATUS,
        a.CLOUD_SERVICE_NUMBER,
        a.CALL_TIMEOUT,
        b.`NAME` as GROUP_NAME,
        thwugs.`NAME` as GROUP_SPLIT_NAME
        from t_ha_help_work_user a
        left join
        t_ha_work_user_group b
        on a.GROUP_ID = b.ID
        left join
        t_ha_work_user_group_split thwugs
        on a.GROUP_SPLIT_ID = thwugs.ID
        where
        a.DELETE_STATUS = '1'
        <if test="account != null and account != ''">
            And ( a.ACCOUNT = #{account} or a.PHONE = #{account} )
        </if>
        <if test="workUserId != null">
            And a.id = #{workUserId}
        </if>

    </select>

    <resultMap id="dbHaWorkUserRegistrar" type="com.zfsoft.ha.dbaccess.data.vo.DbHaWorkUserRegistrarVo">
        <result column="ID" property="id"></result>
        <result column="NAME" property="groupName"></result>
        <result column="GROUP_POST" property="groupPost"></result>
        <result column="WORK_USER_NAME" property="workUserName"></result>
    </resultMap>

    <select id="queryAllHelpWorkUserList" resultMap="dbHaWorkUserRegistrar">
        SELECT A.ID,
        B.NAME,
        CASE
        A.GROUP_POST
        WHEN 1 THEN
        '组长'
        WHEN 2 THEN
        '副组长'
        ELSE '组员'
        END AS GROUP_POST,
        A.NAME AS WORK_USER_NAME
        FROM T_HA_HELP_WORK_USER A,
        T_HA_WORK_USER_GROUP B
        WHERE A.GROUP_ID = B.ID
        AND A.USER_TYPE = 2
        AND A.DELETE_STATUS = 1
        AND B.DELETE_STATUS = 1
        <if test="groupName != null and groupName != ''">
            AND B.NAME = #{groupName}
        </if>
        <if test="postName != null and postName != ''">
            AND A.GROUP_POST = #{postName}
        </if>
        <if test="workUserName != null and workUserName != ''">
            AND A.NAME like concat('%',#{workUserName},'%')
        </if>
        ORDER BY A.GROUP_ID,
        A.GROUP_POST
    </select>
    <!--根据组编号获取用户列表-->
    <select id="selectByGroupId" resultMap="BaseResultMap">
        select *
        from T_HA_HELP_WORK_USER
        where
        GROUP_ID=#{groupId}
        and DELETE_STATUS=#{deleteStatusNo}
        <if test="apponStatus != null and apponStatus != ''">
            AND APPON_STATUS = #{apponStatus}
        </if>
    </select>

    <select id="selectByHaType" resultMap="BaseResultMap">
        select
        *
        from
        t_ha_help_work_user
        where
        DELETE_STATUS=#{deleteStatusNo}
        <if test="haType != null">
            and HA_TYPE = #{haType}
        </if>
    </select>

    <!--根据组编号获取用户列表-->
    <select id="selectByGroupIdAndPost" resultMap="BaseResultMap">
        select *
        from T_HA_HELP_WORK_USER
        where
        GROUP_ID=#{groupId}
        and DELETE_STATUS=#{deleteStatusNo}
        <if test="apponStatus != null and apponStatus != ''">
            AND APPON_STATUS = #{apponStatus}
        </if>
        <if test="groupPost != null and groupPost != ''">
            AND GROUP_POST = #{groupPost}
        </if>
    </select>

    <!--获取所有员工总时长-->
    <select id="avgServiceTime" resultType="java.lang.Integer">
        SELECT sum(AVG_SERVICE_TIME) as avgServiceTime
        FROM t_ha_help_work_user
        WHERE DELETE_STATUS = '1'
    </select>

    <!--根据组编号获取用户列表-->
    <select id="countServicenum" resultType="java.lang.Integer">
        SELECT count(*)
        FROM t_ha_help_work_user
        WHERE DELETE_STATUS = '1'
    </select>
    <!--获取每个帮办人员的排队情况-->
    <select id="queryHelpPersonList" resultMap="BaseResultMap1">
        SELECT
        u.ID,
        u.NAME,
        u.WORK_NUMBER,
        u.IMAGE,
        u.MEMO,
        u.GROUP_ID,
        u.STATUS,
        u.HA_TYPE,
        u.CURRENT_SERVICE_NUM,
        u.MAX_SERVICE_NUM,
        u.AVG_SERVICE_TIME,
        q.TAKE_NUMBER_TYPE
        FROM
        t_ha_help_work_user u
        LEFT JOIN t_ha_work_queue q ON u.ID = q.SERVICE_WORK_USER_ID
        <where>
            u.DELETE_STATUS = '1' -- 未删除
            <if test="groupId != null and groupId != ''">
                AND u.GROUP_ID=#{groupId}
            </if>
            <if test="name != null and name != ''">
                AND u.NAME=#{name}
            </if>
            <if test="status != null and status != ''">
                AND STATUS = #{status}
            </if>
            -- AND q.TAKE_NUMBER_TYPE = '5' -- 区号类型为视频咨询
            AND u.USER_TYPE = '2' -- 用户类型为帮办人员
            AND u.HA_TYPE = '2' -- 帮代办人员类型为圆桌帮办
            AND u.TAKE_NUM_STATUS = '1' -- 取号状态为可取号状态
            GROUP BY
            u.ID
        </where>
    </select>

    <!--根据组编号和用户类型，分组职务获取用户列表-->
    <select id="selectByGroupIdAndType" resultMap="BaseResultMap">
        select *
        from T_HA_HELP_WORK_USER
        where
        GROUP_ID=#{groupId}
        and DELETE_STATUS='1'
        <if test="userType != null and userType != ''">
            AND USER_TYPE = #{userType}
        </if>
        <if test="groupPost != null and groupPost != ''">
            and GROUP_POST  in
            <foreach collection="groupPost.split(',')" item="item" index="index"
                     open="(" separator="," close=")"> #{item}
            </foreach>
        </if>
    </select>
</mapper>
