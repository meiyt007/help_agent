package com.zfsoft.microservice.platform.dbaccess.data.sys;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DbSysHolidayExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    public DbSysHolidayExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andHolidayDateIsNull() {
            addCriterion("HOLIDAY_DATE is null");
            return (Criteria) this;
        }

        public Criteria andHolidayDateIsNotNull() {
            addCriterion("HOLIDAY_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andHolidayDateEqualTo(String value) {
            addCriterion("HOLIDAY_DATE =", value, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayDateNotEqualTo(String value) {
            addCriterion("HOLIDAY_DATE <>", value, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayDateGreaterThan(String value) {
            addCriterion("HOLIDAY_DATE >", value, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayDateGreaterThanOrEqualTo(String value) {
            addCriterion("HOLIDAY_DATE >=", value, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayDateLessThan(String value) {
            addCriterion("HOLIDAY_DATE <", value, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayDateLessThanOrEqualTo(String value) {
            addCriterion("HOLIDAY_DATE <=", value, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayDateLike(String value) {
            addCriterion("HOLIDAY_DATE like", value, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayDateNotLike(String value) {
            addCriterion("HOLIDAY_DATE not like", value, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayDateIn(List<String> values) {
            addCriterion("HOLIDAY_DATE in", values, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayDateNotIn(List<String> values) {
            addCriterion("HOLIDAY_DATE not in", values, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayDateBetween(String value1, String value2) {
            addCriterion("HOLIDAY_DATE between", value1, value2, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayDateNotBetween(String value1, String value2) {
            addCriterion("HOLIDAY_DATE not between", value1, value2, "holidayDate");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateIsNull() {
            addCriterion("HOLIDAY_ENDDATE is null");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateIsNotNull() {
            addCriterion("HOLIDAY_ENDDATE is not null");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateEqualTo(Date value) {
            addCriterionForJDBCDate("HOLIDAY_ENDDATE =", value, "holidayEnddate");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateNotEqualTo(Date value) {
            addCriterionForJDBCDate("HOLIDAY_ENDDATE <>", value, "holidayEnddate");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateGreaterThan(Date value) {
            addCriterionForJDBCDate("HOLIDAY_ENDDATE >", value, "holidayEnddate");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("HOLIDAY_ENDDATE >=", value, "holidayEnddate");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateLessThan(Date value) {
            addCriterionForJDBCDate("HOLIDAY_ENDDATE <", value, "holidayEnddate");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("HOLIDAY_ENDDATE <=", value, "holidayEnddate");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateIn(List<Date> values) {
            addCriterionForJDBCDate("HOLIDAY_ENDDATE in", values, "holidayEnddate");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateNotIn(List<Date> values) {
            addCriterionForJDBCDate("HOLIDAY_ENDDATE not in", values, "holidayEnddate");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("HOLIDAY_ENDDATE between", value1, value2, "holidayEnddate");
            return (Criteria) this;
        }

        public Criteria andHolidayEnddateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("HOLIDAY_ENDDATE not between", value1, value2, "holidayEnddate");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeIsNull() {
            addCriterion("HOLIDAY_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeIsNotNull() {
            addCriterion("HOLIDAY_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeEqualTo(String value) {
            addCriterion("HOLIDAY_TYPE =", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeNotEqualTo(String value) {
            addCriterion("HOLIDAY_TYPE <>", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeGreaterThan(String value) {
            addCriterion("HOLIDAY_TYPE >", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeGreaterThanOrEqualTo(String value) {
            addCriterion("HOLIDAY_TYPE >=", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeLessThan(String value) {
            addCriterion("HOLIDAY_TYPE <", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeLessThanOrEqualTo(String value) {
            addCriterion("HOLIDAY_TYPE <=", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeLike(String value) {
            addCriterion("HOLIDAY_TYPE like", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeNotLike(String value) {
            addCriterion("HOLIDAY_TYPE not like", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeIn(List<String> values) {
            addCriterion("HOLIDAY_TYPE in", values, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeNotIn(List<String> values) {
            addCriterion("HOLIDAY_TYPE not in", values, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeBetween(String value1, String value2) {
            addCriterion("HOLIDAY_TYPE between", value1, value2, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeNotBetween(String value1, String value2) {
            addCriterion("HOLIDAY_TYPE not between", value1, value2, "holidayType");
            return (Criteria) this;
        }

        public Criteria andMemoIsNull() {
            addCriterion("MEMO is null");
            return (Criteria) this;
        }

        public Criteria andMemoIsNotNull() {
            addCriterion("MEMO is not null");
            return (Criteria) this;
        }

        public Criteria andMemoEqualTo(String value) {
            addCriterion("MEMO =", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotEqualTo(String value) {
            addCriterion("MEMO <>", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThan(String value) {
            addCriterion("MEMO >", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoGreaterThanOrEqualTo(String value) {
            addCriterion("MEMO >=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThan(String value) {
            addCriterion("MEMO <", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLessThanOrEqualTo(String value) {
            addCriterion("MEMO <=", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoLike(String value) {
            addCriterion("MEMO like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotLike(String value) {
            addCriterion("MEMO not like", value, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoIn(List<String> values) {
            addCriterion("MEMO in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotIn(List<String> values) {
            addCriterion("MEMO not in", values, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoBetween(String value1, String value2) {
            addCriterion("MEMO between", value1, value2, "memo");
            return (Criteria) this;
        }

        public Criteria andMemoNotBetween(String value1, String value2) {
            addCriterion("MEMO not between", value1, value2, "memo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_sys_holiday
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_sys_holiday
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}