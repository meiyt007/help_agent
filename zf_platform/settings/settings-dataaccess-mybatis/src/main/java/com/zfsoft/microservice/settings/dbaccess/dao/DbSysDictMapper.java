package com.zfsoft.microservice.settings.dbaccess.dao;

import com.zfsoft.microservice.settings.dbaccess.data.DbSysDict;
import com.zfsoft.microservice.settings.dbaccess.data.DbSysDictExample;
import java.util.List;

import org.apache.ibatis.annotations.*;

@Mapper
public interface DbSysDictMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    int countByExample(DbSysDictExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    int deleteByExample(DbSysDictExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    int insert(DbSysDict record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    int insertSelective(DbSysDict record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    List<DbSysDict> selectByExample(DbSysDictExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    DbSysDict selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") DbSysDict record, @Param("example") DbSysDictExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") DbSysDict record, @Param("example") DbSysDictExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(DbSysDict record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(DbSysDict record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "ID, DICT_OID, CODE, NAME, PARENT_OID, MEMO, DICT_OID_PATH, IS_ABLE, IS_DELETE, CREATE_USER_OID, ",
            "CREATE_DATE, SORT",
            "from t_sys_dict",
            "where PARENT_OID IS NULL AND IS_DELETE='0' "
    })
    @ResultMap("BaseResultMap")
    DbSysDict selectTopDbSysDict();

    /**
     * @description:  逻辑删除数据字典
     * @author: wuxx
     * @Date: 2020/9/1 14:23
     **/
    @Update({"update t_sys_dict set IS_DELETE='1' where ID = #{id,jdbcType=BIGINT} "
    })
    int deleteByOid(Long oid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_dict
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "ID, DICT_OID, CODE, NAME, PARENT_OID, MEMO, DICT_OID_PATH, IS_ABLE, IS_DELETE, CREATE_USER_OID, ",
            "CREATE_DATE, SORT",
            "from t_sys_dict",
            "where IS_DELETE='0' and CODE = #{code,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    DbSysDict selectByDbSysDictByCode(String code);

    /**
     * @description:  获取数据字典的信息
     * @param dictOid 数据字典业务主键
     **/
    @Select({
            "select",
            "ID, DICT_OID, CODE, NAME, PARENT_OID, MEMO, DICT_OID_PATH, IS_ABLE, IS_DELETE, CREATE_USER_OID, ",
            "CREATE_DATE, SORT",
            "from t_sys_dict",
            "where IS_DELETE='0' and DICT_OID = #{dictOid,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    DbSysDict getSysDictByDictOid(String dictOid);

}
